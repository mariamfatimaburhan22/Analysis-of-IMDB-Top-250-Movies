{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fe2b231e",
   "metadata": {},
   "source": [
    "##  Analysis of IMDB Top 250 Movies\n",
    "\n",
    "### About Dataset\n",
    "This dataset is having the data of the top 250 Movies as per their IMDB rating listed on the official website of IMDB\n",
    "\n",
    "Features:\n",
    "\n",
    "- rank - Movie Rank as per IMDB rating\n",
    "- movie_id - Movie ID\n",
    "- title - Name of the Movie\n",
    "- year - Year of Movie release\n",
    "- link - URL for the Movie\n",
    "- imdb_votes - Number of people who voted for the IMDB rating\n",
    "- imdb_rating - Rating of the Movie\n",
    "- certificate - Movie Certification\n",
    "- duration - Duration of the Movie\n",
    "- genre - Genre of the Movie\n",
    "- cast_id - ID of the cast member who have worked on the Movie\n",
    "- cast_name - Name of the cast member who have worked on the Movie\n",
    "- director_id - ID of the director who have directed the Movie\n",
    "- director_name - Name of the director who have directed the Movie\n",
    "- writer_id - ID of the writer who have wrote script for the Movie\n",
    "- writer_name - Name of the writer who have wrote script for the Movie\n",
    "- storyline - Storyline of the Movie\n",
    "- user_id - ID of the user who wrote review for the Movie\n",
    "- user_name - Name of the user who wrote review for the Movie\n",
    "- review_id - ID of the user review\n",
    "- review_title - Short review\n",
    "- review_content - Long review\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f427bb4c",
   "metadata": {},
   "source": [
    "## Import Packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a1ec4240",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import linear_model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "554b4588",
   "metadata": {},
   "source": [
    "# Q1. Check and remove missing data\n",
    " \n",
    "### A. Write a Python code snippet that checks for missing values in each column of the dataset. If any, only display the names of the columns with missing values and their corresponding number of missing values. Print the length of the data before removing the missing data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cbf382fb",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "df = 'movies.csv'\n",
    "df = pd.read_csv(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2cd36062",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Columns with missing values: {'certificate': 1}\n"
     ]
    }
   ],
   "source": [
    "#count number of missing values\n",
    "missing_values = df.isnull().sum()\n",
    "\n",
    "# columns with missing values\n",
    "missing_columns = missing_values[missing_values > 0 ]\n",
    "\n",
    "# display names of colums with missing values and their corresponding values\n",
    "\n",
    "if not missing_columns.empty:\n",
    "    print(\"Columns with missing values:\", {col_name: num_missing for col_name, num_missing in missing_columns.items()})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "17dd61e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The length of the resulting dataset before removing the missing data:\n",
      "250\n"
     ]
    }
   ],
   "source": [
    "#the length of the data before removing the missing data.\n",
    "print (\"The length of the resulting dataset before removing the missing data:\")\n",
    "print (len(df))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62069bf9",
   "metadata": {},
   "source": [
    " ### B. Remove any row that contains at least one missing value, and output the length of the resulting cleaned dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a7bbe7df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The length of the cleaned dataset is: 249\n"
     ]
    }
   ],
   "source": [
    "df2 = df.dropna()\n",
    "print (\"The length of the cleaned dataset is:\" , len(df2))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0a7bac39",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>year</th>\n",
       "      <th>imbd_rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>249.000000</td>\n",
       "      <td>249.000000</td>\n",
       "      <td>249.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>125.694779</td>\n",
       "      <td>1986.381526</td>\n",
       "      <td>8.306426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>72.392880</td>\n",
       "      <td>25.173651</td>\n",
       "      <td>0.229390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1921.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>63.000000</td>\n",
       "      <td>1966.000000</td>\n",
       "      <td>8.100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>126.000000</td>\n",
       "      <td>1994.000000</td>\n",
       "      <td>8.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>188.000000</td>\n",
       "      <td>2006.000000</td>\n",
       "      <td>8.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>250.000000</td>\n",
       "      <td>2022.000000</td>\n",
       "      <td>9.300000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             rank         year  imbd_rating\n",
       "count  249.000000   249.000000   249.000000\n",
       "mean   125.694779  1986.381526     8.306426\n",
       "std     72.392880    25.173651     0.229390\n",
       "min      1.000000  1921.000000     8.000000\n",
       "25%     63.000000  1966.000000     8.100000\n",
       "50%    126.000000  1994.000000     8.200000\n",
       "75%    188.000000  2006.000000     8.400000\n",
       "max    250.000000  2022.000000     9.300000"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8991b0db",
   "metadata": {},
   "source": [
    "### C. Calculate the length of imbd_rating that are between 8.0 and 9.3 and then plot a scatter plot to show the relationship between the movie_id and corresponding  imbd rating. \n",
    "The range of rating should  be between the min and max value of imbd rating i.e. 8.0 to 9.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9c1145f7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "243"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#X = ((df2[df2['imbd_rating']] > 8.0 & df2[df2['imbd_rating']] < 9.3)) \n",
    "X = df2[(df2['imbd_rating'] > 8.0) & (df2['imbd_rating'] < 9.3)]\n",
    "len(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9e348edd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='movie_id'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X.plot(x='movie_id', y='imbd_rating', kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0723ccf",
   "metadata": {},
   "source": [
    "## 2. genre processing\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f62c3f56",
   "metadata": {},
   "source": [
    "### A. Please write a code snippet to confirm unique movie genres present in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "eb29812f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total number of unique movie genres in the  data are: 104\n"
     ]
    }
   ],
   "source": [
    "unique_genre = df2['genre'].nunique()\n",
    "print(f'The total number of unique movie genres in the  data are:' ,unique_genre)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "51cabf3c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'imbd_rating'}, xlabel='genre'>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df2.boxplot(\"imbd_rating\" , by=\"genre\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf4537f5",
   "metadata": {},
   "source": [
    "### B. Now, display ALL Rows of the movie genres count data. That is to count and print the number of occurrences for each genre."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ddefee60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Drama                         19\n",
       "Crime,Drama                   14\n",
       "Animation,Adventure,Comedy    10\n",
       "Crime,Drama,Mystery            9\n",
       "Biography,Drama,History        9\n",
       "Drama,War                      7\n",
       "Drama,Romance                  6\n",
       "Crime,Drama,Thriller           5\n",
       "Animation,Action,Adventure     5\n",
       "Action,Adventure,Fantasy       5\n",
       "Action,Adventure,Sci-Fi        5\n",
       "Action,Crime,Drama             5\n",
       "Action,Adventure,Drama         5\n",
       "Drama,Thriller                 4\n",
       "Biography,Crime,Drama          4\n",
       "Comedy,Drama                   4\n",
       "Comedy,Drama,Romance           4\n",
       "Drama,Mystery,Thriller         4\n",
       "Adventure,Drama,War            3\n",
       "Mystery,Thriller               3\n",
       "Drama,Romance,War              3\n",
       "Crime,Thriller                 3\n",
       "Drama,Mystery                  3\n",
       "Action,Sci-Fi                  3\n",
       "Adventure,Biography,Drama      3\n",
       "Animation,Adventure,Family     3\n",
       "Action,Drama,Sci-Fi            3\n",
       "Action,Biography,Drama         3\n",
       "Comedy,Romance                 2\n",
       "Drama,Sport                    2\n",
       "Comedy,Crime                   2\n",
       "Adventure,Family,Fantasy       2\n",
       "Drama,Family                   2\n",
       "Action,Drama,War               2\n",
       "Action,Drama,Thriller          2\n",
       "Adventure,Drama                2\n",
       "Comedy,Crime,Drama             2\n",
       "Drama,Western                  2\n",
       "Adventure,Drama,Western        2\n",
       "Western                        2\n",
       "Biography,Drama,Family         2\n",
       "Action,Drama,Mystery           2\n",
       "Biography,Comedy,Drama         2\n",
       "Action,Drama                   2\n",
       "Biography,Drama                2\n",
       "Action,Adventure               2\n",
       "Biography,Drama,Music          2\n",
       "Drama,Romance,Thriller         1\n",
       "Adventure,Drama,History        1\n",
       "Drama,Mystery,Romance          1\n",
       "Drama,Film-Noir,Mystery        1\n",
       "Adventure,Comedy,Fantasy       1\n",
       "Horror,Mystery,Sci-Fi          1\n",
       "Biography,Drama,Sport          1\n",
       "Comedy,Romance,War             1\n",
       "Horror                         1\n",
       "Action,Comedy,Crime            1\n",
       "Film-Noir,Mystery,Thriller     1\n",
       "Action,Drama,Sport             1\n",
       "Comedy,Drama,Fantasy           1\n",
       "Action,Adventure,Comedy        1\n",
       "Adventure,Thriller             1\n",
       "Drama,Fantasy                  1\n",
       "Animation,Comedy,Drama         1\n",
       "Comedy,Drama,Thriller          1\n",
       "Drama,Family,Sport             1\n",
       "Adventure,Comedy,Drama         1\n",
       "Action,Comedy,Romance          1\n",
       "Adventure,Drama,Thriller       1\n",
       "Adventure,Comedy,Crime         1\n",
       "Animation,Comedy,Family        1\n",
       "Drama,Thriller,War             1\n",
       "Drama,Fantasy,War              1\n",
       "Biography,Comedy,Crime         1\n",
       "Adventure,Western              1\n",
       "Drama,Family,Fantasy           1\n",
       "Adventure,Drama,Sci-Fi         1\n",
       "Crime,Drama,Fantasy            1\n",
       "Adventure,Comedy,Sci-Fi        1\n",
       "Horror,Mystery,Thriller        1\n",
       "Animation,Adventure,Drama      1\n",
       "Drama,Mystery,Sci-Fi           1\n",
       "Drama,Music                    1\n",
       "Animation,Drama,War            1\n",
       "Horror,Sci-Fi                  1\n",
       "Drama,Mystery,War              1\n",
       "Drama,Film-Noir                1\n",
       "Drama,Horror                   1\n",
       "Comedy,Drama,War               1\n",
       "Comedy,War                     1\n",
       "Animation,Drama,Fantasy        1\n",
       "Comedy,Musical,Romance         1\n",
       "Adventure,Sci-Fi               1\n",
       "Drama,Romance,Sci-Fi           1\n",
       "Crime,Mystery,Thriller         1\n",
       "Action,Adventure,Mystery       1\n",
       "Mystery,Romance,Thriller       1\n",
       "Crime,Sci-Fi                   1\n",
       "Crime,Drama,Film-Noir          1\n",
       "Drama,Sci-Fi                   1\n",
       "Action,Thriller                1\n",
       "Comedy,Drama,Family            1\n",
       "Comedy,Music,Romance           1\n",
       "Comedy                         1\n",
       "Name: genre, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rating_item = df2['genre'].value_counts()\n",
    "#display ALL Rows of the business category count data. \n",
    "\n",
    "pd.options.display.max_rows = None\n",
    "rating_item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dda99bb1",
   "metadata": {},
   "source": [
    "### C. Remove categories that appear fewer than 10 times. Write a Python code snippet to perform this operation. At last, print the number of resulting unique business_categories."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "889195c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "43"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count = df2['genre'].value_counts()\n",
    "less_than10 = count[count >= 10].index\n",
    "df2 = df2[df2['genre'].isin(less_than10)]\n",
    "len(df2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee8a2530",
   "metadata": {},
   "source": [
    "# Q3. Training a LinearRegression model on the data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bfdff4a",
   "metadata": {},
   "source": [
    "### A. Build a linear regression model on a subset of the data, using the 'Rank' column as the input variable and the 'imbd_rating' column as the output variable. Split the data into a training set and a test set, with 70% of the data used for training. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "085288f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df2[['rank']]\n",
    "y = df2[['imbd_rating']]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2b7c6edf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg = linear_model.LinearRegression()\n",
    "reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "088b288b",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = reg.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d633e6c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean squared error is: 0.0849490394420113\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "mean_squared_error(y_test, y_pred)\n",
    "print ('Mean squared error is:', mean_squared_error(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e418e6b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rmse is: 0.2914601850030486\n"
     ]
    }
   ],
   "source": [
    "rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n",
    "print ('rmse is:', rmse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4cae2c25",
   "metadata": {},
   "source": [
    "### B. Assuming that the number of reviews a movie has received review_content_count can greatly influence the average rating that the movie can get. Create the relevant variable to the data, and do the LinearRegression again to the imbd_rating"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d5485899",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>review_content</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>tt0032551</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>tt0040522</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>tt0042192</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>tt0044741</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>tt0046438</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>tt0048473</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>tt0050083</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>tt0053198</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>tt0056592</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>tt0061512</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>tt0068646</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>tt0071562</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>tt0073486</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>tt0074958</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>tt0075314</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>tt0086250</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>tt0087843</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>tt0103639</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>tt0110912</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>tt0111161</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>tt0112641</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>tt0113247</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>tt0114709</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>tt0117951</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>tt0120586</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>tt0137523</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>tt0169547</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>tt0180093</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>tt0198781</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>tt0266543</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>tt0317248</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>tt0382932</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>tt0435761</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>tt0469494</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>tt1049413</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>tt1205489</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>tt1454029</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>tt1832382</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>tt2096673</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>tt2106476</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>tt2380307</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>tt4729430</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>tt8267604</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     movie_id  review_content\n",
       "0   tt0032551               1\n",
       "1   tt0040522               1\n",
       "2   tt0042192               1\n",
       "3   tt0044741               1\n",
       "4   tt0046438               1\n",
       "5   tt0048473               1\n",
       "6   tt0050083               1\n",
       "7   tt0053198               1\n",
       "8   tt0056592               1\n",
       "9   tt0061512               1\n",
       "10  tt0068646               1\n",
       "11  tt0071562               1\n",
       "12  tt0073486               1\n",
       "13  tt0074958               1\n",
       "14  tt0075314               1\n",
       "15  tt0086250               1\n",
       "16  tt0087843               1\n",
       "17  tt0103639               1\n",
       "18  tt0110912               1\n",
       "19  tt0111161               1\n",
       "20  tt0112641               1\n",
       "21  tt0113247               1\n",
       "22  tt0114709               1\n",
       "23  tt0117951               1\n",
       "24  tt0120586               1\n",
       "25  tt0137523               1\n",
       "26  tt0169547               1\n",
       "27  tt0180093               1\n",
       "28  tt0198781               1\n",
       "29  tt0266543               1\n",
       "30  tt0317248               1\n",
       "31  tt0382932               1\n",
       "32  tt0435761               1\n",
       "33  tt0469494               1\n",
       "34  tt1049413               1\n",
       "35  tt1205489               1\n",
       "36  tt1454029               1\n",
       "37  tt1832382               1\n",
       "38  tt2096673               1\n",
       "39  tt2106476               1\n",
       "40  tt2380307               1\n",
       "41  tt4729430               1\n",
       "42  tt8267604               1"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "review_count = df2.groupby('movie_id')['review_content'].count().reset_index()\n",
    "review_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2e83de7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>review_content_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>tt0032551</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>tt0040522</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>tt0042192</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>tt0044741</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>tt0046438</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    movie_id  review_content_count\n",
       "0  tt0032551                     1\n",
       "1  tt0040522                     1\n",
       "2  tt0042192                     1\n",
       "3  tt0044741                     1\n",
       "4  tt0046438                     1"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_review_count= review_count.rename(columns={'review_content' : \"review_content_count\"})\n",
    "movie_review_count.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "79b9baa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "      <th>link</th>\n",
       "      <th>imbd_votes</th>\n",
       "      <th>imbd_rating</th>\n",
       "      <th>certificate</th>\n",
       "      <th>duration</th>\n",
       "      <th>genre</th>\n",
       "      <th>...</th>\n",
       "      <th>director_name</th>\n",
       "      <th>writer_id</th>\n",
       "      <th>writer_name</th>\n",
       "      <th>storyline</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_name</th>\n",
       "      <th>review_id</th>\n",
       "      <th>review_title</th>\n",
       "      <th>review_content</th>\n",
       "      <th>review_content_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>tt0111161</td>\n",
       "      <td>The Shawshank Redemption</td>\n",
       "      <td>1994</td>\n",
       "      <td>https://www.imdb.com/title/tt0111161</td>\n",
       "      <td>2,711,075</td>\n",
       "      <td>9.3</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 22m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Frank Darabont</td>\n",
       "      <td>nm0000175,nm0001104</td>\n",
       "      <td>Stephen King,Frank Darabont</td>\n",
       "      <td>Over the course of several years, two convicts...</td>\n",
       "      <td>ur16161013,ur15311310,ur0265899,ur16117882,ur1...</td>\n",
       "      <td>hitchcockthelegend,Sleepin_Dragon,EyeDunno,ale...</td>\n",
       "      <td>rw2284594,rw6606154,rw1221355,rw1822343,rw1288...</td>\n",
       "      <td>Some birds aren't meant to be caged.,An incred...</td>\n",
       "      <td>The Shawshank Redemption is written and direct...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>tt0068646</td>\n",
       "      <td>The Godfather</td>\n",
       "      <td>1972</td>\n",
       "      <td>https://www.imdb.com/title/tt0068646</td>\n",
       "      <td>1,882,829</td>\n",
       "      <td>9.2</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 55m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Francis Ford Coppola</td>\n",
       "      <td>nm0701374,nm0000338</td>\n",
       "      <td>Mario Puzo,Francis Ford Coppola</td>\n",
       "      <td>The aging patriarch of an organized crime dyna...</td>\n",
       "      <td>ur24740649,ur86182727,ur15794099,ur15311310,ur...</td>\n",
       "      <td>CalRhys,andrewburgereviews,gogoschka-1,Sleepin...</td>\n",
       "      <td>rw3038370,rw4756923,rw4059579,rw6568526,rw1897...</td>\n",
       "      <td>The Pinnacle Of Flawless Films!,An offer so go...</td>\n",
       "      <td>'The Godfather' is the pinnacle of flawless fi...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>tt0071562</td>\n",
       "      <td>The Godfather Part II</td>\n",
       "      <td>1974</td>\n",
       "      <td>https://www.imdb.com/title/tt0071562</td>\n",
       "      <td>1,285,350</td>\n",
       "      <td>9.0</td>\n",
       "      <td>R</td>\n",
       "      <td>3h 22m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Francis Ford Coppola</td>\n",
       "      <td>nm0000338,nm0701374</td>\n",
       "      <td>Francis Ford Coppola,Mario Puzo</td>\n",
       "      <td>The early life and career of Vito Corleone in ...</td>\n",
       "      <td>ur0176092,ur0688559,ur92260614,ur0200644,ur117...</td>\n",
       "      <td>Nazi_Fighter_David,tfrizzell,umunir-36959,DanB...</td>\n",
       "      <td>rw0135607,rw0135487,rw5049900,rw0135526,rw0135...</td>\n",
       "      <td>Breathtaking in its scope and tragic grandeur....</td>\n",
       "      <td>Coppola's masterpiece is rivaled only by \"The ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>tt0050083</td>\n",
       "      <td>12 Angry Men</td>\n",
       "      <td>1957</td>\n",
       "      <td>https://www.imdb.com/title/tt0050083</td>\n",
       "      <td>800,954</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Approved</td>\n",
       "      <td>1h 36m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Sidney Lumet</td>\n",
       "      <td>nm0741627</td>\n",
       "      <td>Reginald Rose</td>\n",
       "      <td>The jury in a New York City murder trial is fr...</td>\n",
       "      <td>ur1318549,ur0643062,ur0688559,ur20552756,ur945...</td>\n",
       "      <td>uds3,tedg,tfrizzell,TheLittleSongbird,henrique...</td>\n",
       "      <td>rw0060044,rw0060025,rw0060034,rw2262425,rw5448...</td>\n",
       "      <td>The over-used term \"classic movie\" really come...</td>\n",
       "      <td>This once-in-a-generation masterpiece simply h...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>tt0110912</td>\n",
       "      <td>Pulp Fiction</td>\n",
       "      <td>1994</td>\n",
       "      <td>https://www.imdb.com/title/tt0110912</td>\n",
       "      <td>2,081,489</td>\n",
       "      <td>8.9</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 34m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Quentin Tarantino</td>\n",
       "      <td>nm0000233,nm0000812</td>\n",
       "      <td>Quentin Tarantino,Roger Avary</td>\n",
       "      <td>The lives of two mob hitmen, a boxer, a gangst...</td>\n",
       "      <td>ur0556667,ur76062573,ur118818818,ur15794099,ur...</td>\n",
       "      <td>kylopod,bevo-13678,SebMoz,gogoschka-1,gautamma...</td>\n",
       "      <td>rw1218264,rw5590710,rw6261036,rw3055511,rw5626...</td>\n",
       "      <td>The masterpiece without a message,Shotguns,A m...</td>\n",
       "      <td>One of the early scenes in \"Pulp Fiction\" feat...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12</td>\n",
       "      <td>tt0137523</td>\n",
       "      <td>Fight Club</td>\n",
       "      <td>1999</td>\n",
       "      <td>https://www.imdb.com/title/tt0137523</td>\n",
       "      <td>2,154,995</td>\n",
       "      <td>8.8</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 19m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>David Fincher</td>\n",
       "      <td>nm0657333,nm0880243</td>\n",
       "      <td>Chuck Palahniuk,Jim Uhls</td>\n",
       "      <td>An insomniac office worker and a devil-may-car...</td>\n",
       "      <td>ur113529171,ur2860723,ur0482513,ur15794099,ur2...</td>\n",
       "      <td>Pukeonthestreet,grantss,Leofwine_draca,gogosch...</td>\n",
       "      <td>rw5476552,rw3001234,rw3504332,rw2923012,rw2251...</td>\n",
       "      <td>A great movie you can watch again and again,Su...</td>\n",
       "      <td>Because you'll probably be confused the first ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>18</td>\n",
       "      <td>tt0073486</td>\n",
       "      <td>One Flew Over the Cuckoo's Nest</td>\n",
       "      <td>1975</td>\n",
       "      <td>https://www.imdb.com/title/tt0073486</td>\n",
       "      <td>1,017,354</td>\n",
       "      <td>8.7</td>\n",
       "      <td>18+</td>\n",
       "      <td>2h 13m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Milos Forman</td>\n",
       "      <td>tt0073486,nm0369142,nm0325743,nm0450181,tt0073486</td>\n",
       "      <td>Writers,Lawrence Hauben,Bo Goldman,Ken Kesey,</td>\n",
       "      <td>In the Fall of 1963, a Korean War veteran and ...</td>\n",
       "      <td>ur4409266,ur3728510,ur2093818,ur3922673,ur8949...</td>\n",
       "      <td>Wuchakk,pyrocitor,TBJCSKCNRRQTreviews,philip_v...</td>\n",
       "      <td>rw2692389,rw0998871,rw0143219,rw0143229,rw4245...</td>\n",
       "      <td>The spirit of freedom vs. the spirit of legal-...</td>\n",
       "      <td>Set in the early 60s, the story involves R.P. ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>24</td>\n",
       "      <td>tt0317248</td>\n",
       "      <td>City of God</td>\n",
       "      <td>2002</td>\n",
       "      <td>https://www.imdb.com/title/tt0317248</td>\n",
       "      <td>763,772</td>\n",
       "      <td>8.6</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 10m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Fernando Meirelles,Kátia Lund</td>\n",
       "      <td>nm0513130,nm1130251</td>\n",
       "      <td>Paulo Lins,Bráulio Mantovani</td>\n",
       "      <td>In the slums of Rio, two kids' paths diverge a...</td>\n",
       "      <td>ur20552756,ur1793363,ur2898520,ur2950767,ur441...</td>\n",
       "      <td>TheLittleSongbird,Decko_koji_obecava,SnoopySty...</td>\n",
       "      <td>rw3727515,rw0871139,rw3259235,rw0952393,rw0980...</td>\n",
       "      <td>A Brazilian masterwork,Gangs of Rio,The Godfat...</td>\n",
       "      <td>Such an amazing film that deserves the accolad...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>38</td>\n",
       "      <td>tt0120586</td>\n",
       "      <td>American History X</td>\n",
       "      <td>1998</td>\n",
       "      <td>https://www.imdb.com/title/tt0120586</td>\n",
       "      <td>1,132,911</td>\n",
       "      <td>8.5</td>\n",
       "      <td>R</td>\n",
       "      <td>1h 59m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Tony Kaye</td>\n",
       "      <td>nm0571346</td>\n",
       "      <td>David McKenna</td>\n",
       "      <td>A former neo-nazi skinhead tries to prevent hi...</td>\n",
       "      <td>ur1416505,ur102612153,ur16117882,ur2707735,ur4...</td>\n",
       "      <td>Boba_Fett1138,behbehseta,alexkolokotronis,clas...</td>\n",
       "      <td>rw1130372,rw5043820,rw2016374,rw2545128,rw1144...</td>\n",
       "      <td>One of the most powerful movies I have ever se...</td>\n",
       "      <td>I was expecting a kind of a moralistic movie w...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>67</td>\n",
       "      <td>tt0169547</td>\n",
       "      <td>American Beauty</td>\n",
       "      <td>1999</td>\n",
       "      <td>https://www.imdb.com/title/tt0169547</td>\n",
       "      <td>1,164,109</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 2m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Sam Mendes</td>\n",
       "      <td>nm0050332</td>\n",
       "      <td>Alan Ball</td>\n",
       "      <td>A sexually frustrated suburban father has a mi...</td>\n",
       "      <td>ur2354731,ur0476267,ur1293485,ur0455949,ur0363...</td>\n",
       "      <td>the-evil-cult,RueMorgue,Smells_Like_Cheese,Ant...</td>\n",
       "      <td>rw0593815,rw0591850,rw0592440,rw0592084,rw0592...</td>\n",
       "      <td>Entertaining and Thought-Provoking.,An Oscar w...</td>\n",
       "      <td>Of the 250+ films I've seen and rated on IMDb,...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>73</td>\n",
       "      <td>tt2380307</td>\n",
       "      <td>Coco</td>\n",
       "      <td>2017</td>\n",
       "      <td>https://www.imdb.com/title/tt2380307</td>\n",
       "      <td>521,455</td>\n",
       "      <td>8.4</td>\n",
       "      <td>PG</td>\n",
       "      <td>1h 45m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Lee Unkrich,Adrian Molina</td>\n",
       "      <td>tt2380307,nm0881279,nm0441735,nm0017690,tt2380307</td>\n",
       "      <td>Writers,Lee Unkrich,Jason Katz,Matthew Aldrich,</td>\n",
       "      <td>Aspiring musician Miguel, confronted with his ...</td>\n",
       "      <td>ur7813355,ur38077550,ur2467618,ur118287292,ur7...</td>\n",
       "      <td>neil-476,jon-stokes21-539-17875,planktonrules,...</td>\n",
       "      <td>rw4150044,rw3872249,rw4430985,rw5914126,rw3872...</td>\n",
       "      <td>Succeeds on all levels,Shocked!,What's not to ...</td>\n",
       "      <td>Music is banned in Miguel's household after hi...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>74</td>\n",
       "      <td>tt0114709</td>\n",
       "      <td>Toy Story</td>\n",
       "      <td>1995</td>\n",
       "      <td>https://www.imdb.com/title/tt0114709</td>\n",
       "      <td>1,005,591</td>\n",
       "      <td>8.3</td>\n",
       "      <td>G</td>\n",
       "      <td>1h 21m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>John Lasseter</td>\n",
       "      <td>tt0114709,nm0005124,nm0230032,nm0004056,tt0114709</td>\n",
       "      <td>Writers,John Lasseter,Pete Docter,Andrew Stanton,</td>\n",
       "      <td>A cowboy doll is profoundly threatened and jea...</td>\n",
       "      <td>ur1002035,ur4445210,ur3922673,ur1173088,ur0453...</td>\n",
       "      <td>bob the moo,ccthemovieman-1,philip_vanderveken...</td>\n",
       "      <td>rw0373152,rw1602122,rw0984980,rw0373135,rw0373...</td>\n",
       "      <td>Technically impressive with great script and s...</td>\n",
       "      <td>Andy's toys live a reasonable life of fun and ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>80</td>\n",
       "      <td>tt0087843</td>\n",
       "      <td>Once Upon a Time in America</td>\n",
       "      <td>1984</td>\n",
       "      <td>https://www.imdb.com/title/tt0087843</td>\n",
       "      <td>356,429</td>\n",
       "      <td>8.3</td>\n",
       "      <td>R</td>\n",
       "      <td>3h 49m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Sergio Leone</td>\n",
       "      <td>tt0087843,nm0340580,nm0073053,nm0207401,tt0087843</td>\n",
       "      <td>Writers,Harry Grey,Leonardo Benvenuti,Piero De...</td>\n",
       "      <td>A former Prohibition-era Jewish gangster retur...</td>\n",
       "      <td>ur44112735,ur3922673,ur1002035,ur110513836,ur0...</td>\n",
       "      <td>A_Different_Drummer,philip_vanderveken,bob the...</td>\n",
       "      <td>rw2900651,rw0213795,rw0213687,rw5738686,rw0213...</td>\n",
       "      <td>Last, butchered, unappreciated, work from one ...</td>\n",
       "      <td>... Directors of all time. Let's start with a ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>85</td>\n",
       "      <td>tt0180093</td>\n",
       "      <td>Requiem for a Dream</td>\n",
       "      <td>2000</td>\n",
       "      <td>https://www.imdb.com/title/tt0180093</td>\n",
       "      <td>852,453</td>\n",
       "      <td>8.3</td>\n",
       "      <td>Unrated</td>\n",
       "      <td>1h 42m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Darren Aronofsky</td>\n",
       "      <td>nm0782968,nm0004716</td>\n",
       "      <td>Hubert Selby Jr.,Darren Aronofsky</td>\n",
       "      <td>The drug-induced utopias of four Coney Island ...</td>\n",
       "      <td>ur119249824,ur2467618,ur1002035,ur1425588,ur10...</td>\n",
       "      <td>hwm-05554,planktonrules,bob the moo,Danfish,mi...</td>\n",
       "      <td>rw6065804,rw3530827,rw0944395,rw0611000,rw5957...</td>\n",
       "      <td>Great movie, I hated every minute of it,A visu...</td>\n",
       "      <td>This movie is about how drugs can affect your ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>87</td>\n",
       "      <td>tt0435761</td>\n",
       "      <td>Toy Story 3</td>\n",
       "      <td>2010</td>\n",
       "      <td>https://www.imdb.com/title/tt0435761</td>\n",
       "      <td>845,636</td>\n",
       "      <td>8.3</td>\n",
       "      <td>G</td>\n",
       "      <td>1h 43m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Lee Unkrich</td>\n",
       "      <td>tt0435761,nm0005124,nm0004056,nm0881279,tt0435761</td>\n",
       "      <td>Writers,John Lasseter,Andrew Stanton,Lee Unkrich,</td>\n",
       "      <td>The toys are mistakenly delivered to a day-car...</td>\n",
       "      <td>ur0892646,ur2488512,ur0317399,ur21833424,ur338...</td>\n",
       "      <td>dee.reid,claudio_carvalho,DICK STEEL,The_Fifth...</td>\n",
       "      <td>rw2333889,rw2339211,rw2265648,rw2257007,rw2265...</td>\n",
       "      <td>An amazing third \"Story\",Wonderful and Touchin...</td>\n",
       "      <td>Lee Unkrinch directed \"Toy Story 3,\" the third...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>88</td>\n",
       "      <td>tt8267604</td>\n",
       "      <td>Capernaum</td>\n",
       "      <td>2018</td>\n",
       "      <td>https://www.imdb.com/title/tt8267604</td>\n",
       "      <td>92,871</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 6m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Nadine Labaki</td>\n",
       "      <td>tt8267604,nm1701024,nm2764802,nm9878616,tt8267604</td>\n",
       "      <td>Writers,Nadine Labaki,Jihad Hojeily,Michelle K...</td>\n",
       "      <td>While serving a five-year sentence for a viole...</td>\n",
       "      <td>ur87850731,ur2467618,ur17825945,ur60343557,ur2...</td>\n",
       "      <td>MrHeraclius,planktonrules,thesar-2,andrewestre...</td>\n",
       "      <td>rw5480034,rw5928544,rw6022577,rw4461566,rw4991...</td>\n",
       "      <td>Capernaum,Well made but very difficult to watc...</td>\n",
       "      <td>Zain Al Rafeea is a terrific revelation in thi...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>94</td>\n",
       "      <td>tt2106476</td>\n",
       "      <td>The Hunt</td>\n",
       "      <td>2012</td>\n",
       "      <td>https://www.imdb.com/title/tt2106476</td>\n",
       "      <td>336,241</td>\n",
       "      <td>8.3</td>\n",
       "      <td>R</td>\n",
       "      <td>1h 55m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Thomas Vinterberg</td>\n",
       "      <td>nm0899121,nm2105585</td>\n",
       "      <td>Thomas Vinterberg,Tobias Lindholm</td>\n",
       "      <td>A teacher lives a lonely life, all the while s...</td>\n",
       "      <td>ur0278527,ur22668817,ur0453068,ur2467618,ur344...</td>\n",
       "      <td>Hitchcoc,FlashCallahan,Quinoa1984,planktonrule...</td>\n",
       "      <td>rw2951920,rw2917732,rw3242626,rw2944654,rw2715...</td>\n",
       "      <td>Once Again: The Children's Hour,He doesn't hav...</td>\n",
       "      <td>Having worked as a teacher for some forty year...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>99</td>\n",
       "      <td>tt0044741</td>\n",
       "      <td>Ikiru</td>\n",
       "      <td>1952</td>\n",
       "      <td>https://www.imdb.com/title/tt0044741</td>\n",
       "      <td>80,354</td>\n",
       "      <td>8.3</td>\n",
       "      <td>Not Rated</td>\n",
       "      <td>2h 23m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Akira Kurosawa</td>\n",
       "      <td>nm0000041,nm0368074,nm0644823</td>\n",
       "      <td>Akira Kurosawa,Shinobu Hashimoto,Hideo Oguni</td>\n",
       "      <td>A bureaucrat tries to find meaning in his life...</td>\n",
       "      <td>ur1559834,ur0453068,ur2248099,ur0278527,ur4888...</td>\n",
       "      <td>OttoVonB,Quinoa1984,The_Void,Hitchcoc,lee_eise...</td>\n",
       "      <td>rw0047035,rw0047044,rw0979541,rw2139951,rw3631...</td>\n",
       "      <td>\"Only when he learned he would die did he star...</td>\n",
       "      <td>Ikiru (\"to live\")is a Kurosawa film devoid of ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>106</td>\n",
       "      <td>tt0086250</td>\n",
       "      <td>Scarface</td>\n",
       "      <td>1983</td>\n",
       "      <td>https://www.imdb.com/title/tt0086250</td>\n",
       "      <td>853,851</td>\n",
       "      <td>8.3</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 50m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Brian De Palma</td>\n",
       "      <td>tt0086250,nm0000231,nm0001328,nm0372942,tt0086250</td>\n",
       "      <td>Writers,Oliver Stone,Howard Hawks,Ben Hecht,</td>\n",
       "      <td>In 1980 Miami, a determined Cuban immigrant ta...</td>\n",
       "      <td>ur0482513,ur3774967,ur1252120,ur3131494,ur8785...</td>\n",
       "      <td>Leofwine_draca,Aditya_Gokhale,akpiggott,TruPre...</td>\n",
       "      <td>rw3596039,rw1242450,rw0205030,rw1584852,rw5505...</td>\n",
       "      <td>A stone cold, 100% gangster classic,\"You wanna...</td>\n",
       "      <td>Words alone cannot express how much I love thi...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>110</td>\n",
       "      <td>tt0056592</td>\n",
       "      <td>To Kill a Mockingbird</td>\n",
       "      <td>1962</td>\n",
       "      <td>https://www.imdb.com/title/tt0056592</td>\n",
       "      <td>319,590</td>\n",
       "      <td>8.3</td>\n",
       "      <td>Approved</td>\n",
       "      <td>2h 9m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Robert Mulligan</td>\n",
       "      <td>nm0497369,nm0285210</td>\n",
       "      <td>Harper Lee,Horton Foote</td>\n",
       "      <td>Atticus Finch, a widowed lawyer in Depression-...</td>\n",
       "      <td>ur2339662,ur2286500,ur4103165,ur2093818,ur0187...</td>\n",
       "      <td>FilmOtaku,clydestuff,Xstal,TBJCSKCNRRQTreviews...</td>\n",
       "      <td>rw0079616,rw0079634,rw8518800,rw0079653,rw0079...</td>\n",
       "      <td>One of the most important films of all time,No...</td>\n",
       "      <td>To Kill a Mockingbird is the movie based on th...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>112</td>\n",
       "      <td>tt1049413</td>\n",
       "      <td>Up</td>\n",
       "      <td>2009</td>\n",
       "      <td>https://www.imdb.com/title/tt1049413</td>\n",
       "      <td>1,056,335</td>\n",
       "      <td>8.3</td>\n",
       "      <td>PG</td>\n",
       "      <td>1h 36m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Pete Docter,Bob Peterson</td>\n",
       "      <td>nm0230032,nm0677037,nm0565336</td>\n",
       "      <td>Pete Docter,Bob Peterson,Tom McCarthy</td>\n",
       "      <td>78-year-old Carl Fredricksen travels to Paradi...</td>\n",
       "      <td>ur2898520,ur87850731,ur20552756,ur1622466,ur08...</td>\n",
       "      <td>SnoopyStyle,MrHeraclius,TheLittleSongbird,DonF...</td>\n",
       "      <td>rw2931192,rw5485117,rw2251012,rw2073643,rw2074...</td>\n",
       "      <td>Real tear jerker opening,Best animated movies ...</td>\n",
       "      <td>Carl Fredricksen (Ed Asner) as a young quiet k...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>114</td>\n",
       "      <td>tt1832382</td>\n",
       "      <td>A Separation</td>\n",
       "      <td>2011</td>\n",
       "      <td>https://www.imdb.com/title/tt1832382</td>\n",
       "      <td>247,485</td>\n",
       "      <td>8.3</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>2h 3m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Asghar Farhadi</td>\n",
       "      <td>nm1410815</td>\n",
       "      <td>Asghar Farhadi</td>\n",
       "      <td>A married couple are faced with a difficult de...</td>\n",
       "      <td>ur2488512,ur2152472,ur1419266,ur20315186,ur122...</td>\n",
       "      <td>claudio_carvalho,krisrox,stensson,Radu_A,Ramas...</td>\n",
       "      <td>rw2548767,rw2482803,rw2501181,rw2386488,rw2539...</td>\n",
       "      <td>Mankind Is Flawed,Do yourself a favor - make s...</td>\n",
       "      <td>In Tehran, the teacher Simin (Leila Hatami) ha...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>116</td>\n",
       "      <td>tt0075314</td>\n",
       "      <td>Taxi Driver</td>\n",
       "      <td>1976</td>\n",
       "      <td>https://www.imdb.com/title/tt0075314</td>\n",
       "      <td>848,183</td>\n",
       "      <td>8.2</td>\n",
       "      <td>R</td>\n",
       "      <td>1h 54m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Martin Scorsese</td>\n",
       "      <td>nm0001707</td>\n",
       "      <td>Paul Schrader</td>\n",
       "      <td>A mentally unstable veteran works as a nightti...</td>\n",
       "      <td>ur0945066,ur1002035,ur1293485,ur2898520,ur2055...</td>\n",
       "      <td>BA_Harrison,bob the moo,Smells_Like_Cheese,Sno...</td>\n",
       "      <td>rw3214800,rw1291137,rw0150574,rw2864089,rw2366...</td>\n",
       "      <td>A classy character study of a disturbed indivi...</td>\n",
       "      <td>Insomniac Vietnam veteran Travis Bickle (Rober...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>121</td>\n",
       "      <td>tt0040522</td>\n",
       "      <td>Bicycle Thieves</td>\n",
       "      <td>1948</td>\n",
       "      <td>https://www.imdb.com/title/tt0040522</td>\n",
       "      <td>165,771</td>\n",
       "      <td>8.3</td>\n",
       "      <td>Not Rated</td>\n",
       "      <td>1h 29m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Vittorio De Sica</td>\n",
       "      <td>tt0040522,nm0953790,nm0059030,nm0080755,tt0040522</td>\n",
       "      <td>Writers,Cesare Zavattini,Luigi Bartolini,Orest...</td>\n",
       "      <td>In post-war Italy, a working-class man's bicyc...</td>\n",
       "      <td>ur0688559,ur0453068,ur1282070,ur2339662,ur2488...</td>\n",
       "      <td>tfrizzell,Quinoa1984,ItalianGerry,FilmOtaku,cl...</td>\n",
       "      <td>rw0038353,rw0038352,rw0038368,rw0038374,rw2225...</td>\n",
       "      <td>Quiet Desperation---Italian Style.,Another one...</td>\n",
       "      <td>In post-World War II Italy poverty is a dire r...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>131</td>\n",
       "      <td>tt0042192</td>\n",
       "      <td>All About Eve</td>\n",
       "      <td>1950</td>\n",
       "      <td>https://www.imdb.com/title/tt0042192</td>\n",
       "      <td>132,775</td>\n",
       "      <td>8.2</td>\n",
       "      <td>Passed</td>\n",
       "      <td>2h 18m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Joseph L. Mankiewicz</td>\n",
       "      <td>nm0000581,nm0650581</td>\n",
       "      <td>Joseph L. Mankiewicz,Mary Orr</td>\n",
       "      <td>A seemingly timid but secretly ruthless ingénu...</td>\n",
       "      <td>ur2488512,ur20552756,ur12596887,ur2420383,ur01...</td>\n",
       "      <td>claudio_carvalho,TheLittleSongbird,JohnHowardR...</td>\n",
       "      <td>rw1195687,rw2076000,rw3793117,rw2210508,rw0041...</td>\n",
       "      <td>A Magnificent Timeless Tale of Ambition, Manip...</td>\n",
       "      <td>The ambitious Eve Harrington (Anne Baxter) get...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>136</td>\n",
       "      <td>tt0112641</td>\n",
       "      <td>Casino</td>\n",
       "      <td>1995</td>\n",
       "      <td>https://www.imdb.com/title/tt0112641</td>\n",
       "      <td>528,069</td>\n",
       "      <td>8.2</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 58m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Martin Scorsese</td>\n",
       "      <td>nm0683380,nm0000217</td>\n",
       "      <td>Nicholas Pileggi,Martin Scorsese</td>\n",
       "      <td>A tale of greed, deception, money, power, and ...</td>\n",
       "      <td>ur1293485,ur2467618,ur31261952,ur0614400,ur017...</td>\n",
       "      <td>Smells_Like_Cheese,planktonrules,Movie-ManDan,...</td>\n",
       "      <td>rw0358218,rw7700011,rw3282257,rw0358109,rw1660...</td>\n",
       "      <td>\"Now it looks like Disney Land\",I enjoyed this...</td>\n",
       "      <td>This is one of the best films of the 90's hand...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>139</td>\n",
       "      <td>tt0469494</td>\n",
       "      <td>There Will Be Blood</td>\n",
       "      <td>2007</td>\n",
       "      <td>https://www.imdb.com/title/tt0469494</td>\n",
       "      <td>595,129</td>\n",
       "      <td>8.2</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 38m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Paul Thomas Anderson</td>\n",
       "      <td>nm0000759,nm0801737</td>\n",
       "      <td>Paul Thomas Anderson,Upton Sinclair</td>\n",
       "      <td>A story of family, religion, hatred, oil and m...</td>\n",
       "      <td>ur16117882,ur0482513,ur19117722,ur55517503,ur4...</td>\n",
       "      <td>alexkolokotronis,Leofwine_draca,murtaza_mma,br...</td>\n",
       "      <td>rw1840254,rw2580474,rw2133941,rw7817140,rw1859...</td>\n",
       "      <td>The Truth Hurts,Excellent, gutsy filmmaking,Th...</td>\n",
       "      <td>People did not like this movie for a simple re...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>154</td>\n",
       "      <td>tt0266543</td>\n",
       "      <td>Finding Nemo</td>\n",
       "      <td>2003</td>\n",
       "      <td>https://www.imdb.com/title/tt0266543</td>\n",
       "      <td>1,055,095</td>\n",
       "      <td>8.2</td>\n",
       "      <td>G</td>\n",
       "      <td>1h 40m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Andrew Stanton,Lee Unkrich</td>\n",
       "      <td>nm0004056,nm0677037,nm0721675</td>\n",
       "      <td>Andrew Stanton,Bob Peterson,David Reynolds</td>\n",
       "      <td>After his son is captured in the Great Barrier...</td>\n",
       "      <td>ur2020269,ur0556667,ur0375636,ur3174947,ur9469...</td>\n",
       "      <td>Coventry,kylopod,Buddy-51,mjw2305,PizzicatoFis...</td>\n",
       "      <td>rw0773564,rw1194203,rw0773545,rw1004133,rw1320...</td>\n",
       "      <td>Yes, it's THAT good !!,Pixar's best feature to...</td>\n",
       "      <td>I'll be totally honest and confirm to you that...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>161</td>\n",
       "      <td>tt2096673</td>\n",
       "      <td>Inside Out</td>\n",
       "      <td>2015</td>\n",
       "      <td>https://www.imdb.com/title/tt2096673</td>\n",
       "      <td>725,352</td>\n",
       "      <td>8.2</td>\n",
       "      <td>PG</td>\n",
       "      <td>1h 35m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Pete Docter,Ronnie Del Carmen</td>\n",
       "      <td>tt2096673,nm0230032,nm0215455,nm0498834,tt2096673</td>\n",
       "      <td>Writers,Pete Docter,Ronnie Del Carmen,Meg LeFa...</td>\n",
       "      <td>After young Riley is uprooted from her Midwest...</td>\n",
       "      <td>ur126297403,ur1845755,ur78948186,ur20552756,ur...</td>\n",
       "      <td>pickle-92642,Phil_Chester,Animany94,TheLittleS...</td>\n",
       "      <td>rw7383760,rw6431251,rw3865673,rw3283511,rw3265...</td>\n",
       "      <td>Classic for the new generation? Yes!,Not for y...</td>\n",
       "      <td>I just knew this was gonna be amazing. Such a ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>167</td>\n",
       "      <td>tt0117951</td>\n",
       "      <td>Trainspotting</td>\n",
       "      <td>1996</td>\n",
       "      <td>https://www.imdb.com/title/tt0117951</td>\n",
       "      <td>694,832</td>\n",
       "      <td>8.1</td>\n",
       "      <td>R</td>\n",
       "      <td>1h 33m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Danny Boyle</td>\n",
       "      <td>nm0920543,nm0388076</td>\n",
       "      <td>Irvine Welsh,John Hodge</td>\n",
       "      <td>Renton, deeply immersed in the Edinburgh drug ...</td>\n",
       "      <td>ur0278527,ur1002035,ur4569900,ur11842025,ur157...</td>\n",
       "      <td>Hitchcoc,bob the moo,Prismark10,ametaphysicals...</td>\n",
       "      <td>rw5261062,rw0398029,rw3602356,rw1838512,rw4190...</td>\n",
       "      <td>Now I See Why,Hilarious, imaginative and very ...</td>\n",
       "      <td>I'm an old guy. I'm also a movie fan with an o...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>171</td>\n",
       "      <td>tt1205489</td>\n",
       "      <td>Gran Torino</td>\n",
       "      <td>2008</td>\n",
       "      <td>https://www.imdb.com/title/tt1205489</td>\n",
       "      <td>783,124</td>\n",
       "      <td>8.1</td>\n",
       "      <td>R</td>\n",
       "      <td>1h 56m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Clint Eastwood</td>\n",
       "      <td>nm1010405,nm3164738</td>\n",
       "      <td>Nick Schenk,Dave Johannson</td>\n",
       "      <td>Disgruntled Korean War veteran Walt Kowalski s...</td>\n",
       "      <td>ur11842025,ur80922659,ur1293485,ur0076091,ur95...</td>\n",
       "      <td>ametaphysicalshark,dk777,Smells_Like_Cheese,Ke...</td>\n",
       "      <td>rw1990728,rw6510512,rw2041497,rw1989879,rw1990...</td>\n",
       "      <td>Yet another Eastwood gem,Gran Torino,Clint's b...</td>\n",
       "      <td>I feel like I should let everyone reading this...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>178</td>\n",
       "      <td>tt4729430</td>\n",
       "      <td>Klaus</td>\n",
       "      <td>2019</td>\n",
       "      <td>https://www.imdb.com/title/tt4729430</td>\n",
       "      <td>162,886</td>\n",
       "      <td>8.2</td>\n",
       "      <td>PG</td>\n",
       "      <td>1h 36m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Sergio Pablos,Carlos Martínez López</td>\n",
       "      <td>nm0655053,nm2700235,nm2082813</td>\n",
       "      <td>Sergio Pablos,Jim Mahoney,Zach Lewis</td>\n",
       "      <td>A simple act of kindness always sparks another...</td>\n",
       "      <td>ur6201371,ur0499651,ur53096283,ur83822756,ur54...</td>\n",
       "      <td>cricketbat,Joejoesan,andymhancock,CubsandCultu...</td>\n",
       "      <td>rw5341855,rw5256642,rw5261806,rw5310907,rw6417...</td>\n",
       "      <td>In a sea of generic Christmas movies, Klaus st...</td>\n",
       "      <td>Klaus is an amusing new twist on a very old st...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>202</td>\n",
       "      <td>tt0198781</td>\n",
       "      <td>Monsters, Inc.</td>\n",
       "      <td>2001</td>\n",
       "      <td>https://www.imdb.com/title/tt0198781</td>\n",
       "      <td>920,862</td>\n",
       "      <td>8.1</td>\n",
       "      <td>G</td>\n",
       "      <td>1h 32m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Pete Docter,David Silverman,Lee Unkrich</td>\n",
       "      <td>tt0198781,nm0230032,nm0191717,nm0682066,tt0198781</td>\n",
       "      <td>Writers,Pete Docter,Jill Culton,Jeff Pidgeon,</td>\n",
       "      <td>In order to power the city, monsters have to s...</td>\n",
       "      <td>ur2000855,ur1173088,ur1416505,ur4445210,ur1391...</td>\n",
       "      <td>vchimpanzee,MovieAddict2016,Boba_Fett1138,ccth...</td>\n",
       "      <td>rw0954846,rw0648075,rw0648108,rw1416189,rw0647...</td>\n",
       "      <td>Adorable, funny, perfect voice casting for the...</td>\n",
       "      <td>I thought Billy Crystal and John Goodman were ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>207</td>\n",
       "      <td>tt0046438</td>\n",
       "      <td>Tokyo Story</td>\n",
       "      <td>1953</td>\n",
       "      <td>https://www.imdb.com/title/tt0046438</td>\n",
       "      <td>63,208</td>\n",
       "      <td>8.2</td>\n",
       "      <td>Not Rated</td>\n",
       "      <td>2h 16m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Yasujirô Ozu</td>\n",
       "      <td>nm0633792,nm0654868</td>\n",
       "      <td>Kôgo Noda,Yasujirô Ozu</td>\n",
       "      <td>An old couple visit their children and grandch...</td>\n",
       "      <td>ur3608743,ur1098460,ur14908520,ur0491610,ur007...</td>\n",
       "      <td>EUyeshima,Galina_movie_fan,GyatsoLa,howard.sch...</td>\n",
       "      <td>rw1237040,rw0050722,rw1633160,rw0050710,rw0050...</td>\n",
       "      <td>Ozu's Quietly Brilliant Masterpiece Deserves Y...</td>\n",
       "      <td>I think this movie is amazing for reasons I wa...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>213</td>\n",
       "      <td>tt0382932</td>\n",
       "      <td>Ratatouille</td>\n",
       "      <td>2007</td>\n",
       "      <td>https://www.imdb.com/title/tt0382932</td>\n",
       "      <td>752,323</td>\n",
       "      <td>8.1</td>\n",
       "      <td>G</td>\n",
       "      <td>1h 51m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Brad Bird,Jan Pinkava</td>\n",
       "      <td>tt0382932,nm0083348,nm0684342,nm0135296,tt0382932</td>\n",
       "      <td>Writers,Brad Bird,Jan Pinkava,Jim Capobianco,</td>\n",
       "      <td>A rat who can cook makes an unusual alliance w...</td>\n",
       "      <td>ur88612516,ur2467618,ur0278527,ur4103165,ur775...</td>\n",
       "      <td>cinephile-27690,planktonrules,Hitchcoc,Xstal,P...</td>\n",
       "      <td>rw4446684,rw1690172,rw4825842,rw6186008,rw1676...</td>\n",
       "      <td>\"Not everyone can become a great artist; but a...</td>\n",
       "      <td>That's what the food critic, Anton Ego, says i...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>219</td>\n",
       "      <td>tt0074958</td>\n",
       "      <td>Network</td>\n",
       "      <td>1976</td>\n",
       "      <td>https://www.imdb.com/title/tt0074958</td>\n",
       "      <td>161,819</td>\n",
       "      <td>8.1</td>\n",
       "      <td>R</td>\n",
       "      <td>2h 1m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Sidney Lumet</td>\n",
       "      <td>nm0154665</td>\n",
       "      <td>Paddy Chayefsky</td>\n",
       "      <td>A television network cynically exploits a dera...</td>\n",
       "      <td>ur0688559,ur0384847,ur9521536,ur0541468,ur2420...</td>\n",
       "      <td>tfrizzell,nycritic,dead47548,cchase,Lechuguill...</td>\n",
       "      <td>rw0148846,rw1026099,rw1796611,rw1160445,rw2103...</td>\n",
       "      <td>It Is More Than a Film, It Is Like a Crystal B...</td>\n",
       "      <td>\"Network\". If there was ever a film that fores...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>224</td>\n",
       "      <td>tt0048473</td>\n",
       "      <td>Pather Panchali</td>\n",
       "      <td>1955</td>\n",
       "      <td>https://www.imdb.com/title/tt0048473</td>\n",
       "      <td>34,328</td>\n",
       "      <td>8.3</td>\n",
       "      <td>Not Rated</td>\n",
       "      <td>2h 5m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Satyajit Ray</td>\n",
       "      <td>nm0051808,nm0006249</td>\n",
       "      <td>Bibhutibhushan Bandyopadhyay,Satyajit Ray</td>\n",
       "      <td>Impoverished priest Harihar Ray, dreaming of a...</td>\n",
       "      <td>ur0391152,ur1282070,ur0239428,ur5788055,ur4103...</td>\n",
       "      <td>zetes,ItalianGerry,harry-76,briancham1994,Xsta...</td>\n",
       "      <td>rw0055920,rw1458890,rw0055915,rw8270909,rw7391...</td>\n",
       "      <td>Absolutely Perfect. One of the best films ever...</td>\n",
       "      <td>It is a little known fact that India produces ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>229</td>\n",
       "      <td>tt0113247</td>\n",
       "      <td>La haine</td>\n",
       "      <td>1995</td>\n",
       "      <td>https://www.imdb.com/title/tt0113247</td>\n",
       "      <td>178,165</td>\n",
       "      <td>8.1</td>\n",
       "      <td>Not Rated</td>\n",
       "      <td>1h 38m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Mathieu Kassovitz</td>\n",
       "      <td>nm0440913</td>\n",
       "      <td>Mathieu Kassovitz</td>\n",
       "      <td>24 hours in the lives of three young men in th...</td>\n",
       "      <td>ur2707735,ur15794099,ur0491610,ur1741394,ur121...</td>\n",
       "      <td>classicsoncall,gogoschka-1,howard.schumann,Bog...</td>\n",
       "      <td>rw3871855,rw2926427,rw0363116,rw0363111,rw1357...</td>\n",
       "      <td>\"...it's not how you fall that matters. It's h...</td>\n",
       "      <td>After watching this film I reflected back on a...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>233</td>\n",
       "      <td>tt0032551</td>\n",
       "      <td>The Grapes of Wrath</td>\n",
       "      <td>1940</td>\n",
       "      <td>https://www.imdb.com/title/tt0032551</td>\n",
       "      <td>95,146</td>\n",
       "      <td>8.1</td>\n",
       "      <td>Passed</td>\n",
       "      <td>2h 9m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>John Ford</td>\n",
       "      <td>nm0425913,nm0825705</td>\n",
       "      <td>Nunnally Johnson,John Steinbeck</td>\n",
       "      <td>An Oklahoma family, driven off their farm by t...</td>\n",
       "      <td>ur2483625,ur0562732,ur4532636,ur2444068,ur4939...</td>\n",
       "      <td>bkoganbing,Anonymous_Maxine,evanston_dad,inkbl...</td>\n",
       "      <td>rw1487672,rw0021724,rw1288247,rw4131945,rw1649...</td>\n",
       "      <td>Economic Dislocation,John Ford's stark portray...</td>\n",
       "      <td>John Ford's film of John Steinbeck's novel has...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>238</td>\n",
       "      <td>tt0061512</td>\n",
       "      <td>Cool Hand Luke</td>\n",
       "      <td>1967</td>\n",
       "      <td>https://www.imdb.com/title/tt0061512</td>\n",
       "      <td>179,672</td>\n",
       "      <td>8.1</td>\n",
       "      <td>GP</td>\n",
       "      <td>2h 7m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Stuart Rosenberg</td>\n",
       "      <td>nm0668914,nm0682757,nm0237543</td>\n",
       "      <td>Donn Pearce,Frank Pierson,Hal Dresner</td>\n",
       "      <td>A laid back Southern man is sentenced to two y...</td>\n",
       "      <td>ur15794099,ur0806494,ur13134536,ur2286500,ur04...</td>\n",
       "      <td>gogoschka-1,ferguson-6,Michael_Elliott,clydest...</td>\n",
       "      <td>rw2923989,rw2630815,rw1960219,rw0097077,rw3633...</td>\n",
       "      <td>\"Luke\" is a character Newman was born to play ...</td>\n",
       "      <td>This film got me from the first frame to the l...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>240</td>\n",
       "      <td>tt0053198</td>\n",
       "      <td>The 400 Blows</td>\n",
       "      <td>1959</td>\n",
       "      <td>https://www.imdb.com/title/tt0053198</td>\n",
       "      <td>120,571</td>\n",
       "      <td>8.1</td>\n",
       "      <td>Not Rated</td>\n",
       "      <td>1h 39m</td>\n",
       "      <td>Crime,Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>François Truffaut</td>\n",
       "      <td>nm0000076,nm0610115</td>\n",
       "      <td>François Truffaut,Marcel Moussy</td>\n",
       "      <td>A young boy, left without attention, delves in...</td>\n",
       "      <td>ur0150331,ur2339662,ur7790394,ur1174211,ur2860...</td>\n",
       "      <td>stryker-5,FilmOtaku,Camera-Obscura,Snow Leopar...</td>\n",
       "      <td>rw0068933,rw0068970,rw1524167,rw1082274,rw3330...</td>\n",
       "      <td>\"N'Oublie Pas Les Ordures\",One of the shining ...</td>\n",
       "      <td>So here it is, the landmark film which ushered...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>247</td>\n",
       "      <td>tt1454029</td>\n",
       "      <td>The Help</td>\n",
       "      <td>2011</td>\n",
       "      <td>https://www.imdb.com/title/tt1454029</td>\n",
       "      <td>466,011</td>\n",
       "      <td>8.1</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>2h 26m</td>\n",
       "      <td>Drama</td>\n",
       "      <td>...</td>\n",
       "      <td>Tate Taylor</td>\n",
       "      <td>nm0853238,nm3543826</td>\n",
       "      <td>Tate Taylor,Kathryn Stockett</td>\n",
       "      <td>An aspiring author during the civil rights mov...</td>\n",
       "      <td>ur0806494,ur1391596,ur24207576,ur2955724,ur221...</td>\n",
       "      <td>ferguson-6,JohnDeSando,taylor_king-890-815491,...</td>\n",
       "      <td>rw2473566,rw2472337,rw2472299,rw2697863,rw2488...</td>\n",
       "      <td>Minny Don't Burn Chicken,Ready to burst . . .,...</td>\n",
       "      <td>Greetings again from the darkness. The film is...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>248</td>\n",
       "      <td>tt0103639</td>\n",
       "      <td>Aladdin</td>\n",
       "      <td>1992</td>\n",
       "      <td>https://www.imdb.com/title/tt0103639</td>\n",
       "      <td>429,219</td>\n",
       "      <td>8.0</td>\n",
       "      <td>G</td>\n",
       "      <td>1h 30m</td>\n",
       "      <td>Animation,Adventure,Comedy</td>\n",
       "      <td>...</td>\n",
       "      <td>Ron Clements,John Musker</td>\n",
       "      <td>tt0103639,nm0166256,nm0615780,nm0254645,tt0103639</td>\n",
       "      <td>Writers,Ron Clements,John Musker,Ted Elliott,</td>\n",
       "      <td>A kindhearted street urchin and a power-hungry...</td>\n",
       "      <td>ur1293485,ur1416505,ur4445210,ur4234119,ur0909...</td>\n",
       "      <td>Smells_Like_Cheese,Boba_Fett1138,ccthemovieman...</td>\n",
       "      <td>rw0302749,rw0950861,rw1571053,rw2534639,rw0302...</td>\n",
       "      <td>I'd put it in with the Disney classics,Great s...</td>\n",
       "      <td>Aladdin is such an awesome move that still get...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>43 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    rank   movie_id                            title  year  \\\n",
       "0      1  tt0111161         The Shawshank Redemption  1994   \n",
       "1      2  tt0068646                    The Godfather  1972   \n",
       "2      4  tt0071562            The Godfather Part II  1974   \n",
       "3      5  tt0050083                     12 Angry Men  1957   \n",
       "4      8  tt0110912                     Pulp Fiction  1994   \n",
       "5     12  tt0137523                       Fight Club  1999   \n",
       "6     18  tt0073486  One Flew Over the Cuckoo's Nest  1975   \n",
       "7     24  tt0317248                      City of God  2002   \n",
       "8     38  tt0120586               American History X  1998   \n",
       "9     67  tt0169547                  American Beauty  1999   \n",
       "10    73  tt2380307                             Coco  2017   \n",
       "11    74  tt0114709                        Toy Story  1995   \n",
       "12    80  tt0087843      Once Upon a Time in America  1984   \n",
       "13    85  tt0180093              Requiem for a Dream  2000   \n",
       "14    87  tt0435761                      Toy Story 3  2010   \n",
       "15    88  tt8267604                        Capernaum  2018   \n",
       "16    94  tt2106476                         The Hunt  2012   \n",
       "17    99  tt0044741                            Ikiru  1952   \n",
       "18   106  tt0086250                         Scarface  1983   \n",
       "19   110  tt0056592            To Kill a Mockingbird  1962   \n",
       "20   112  tt1049413                               Up  2009   \n",
       "21   114  tt1832382                     A Separation  2011   \n",
       "22   116  tt0075314                      Taxi Driver  1976   \n",
       "23   121  tt0040522                  Bicycle Thieves  1948   \n",
       "24   131  tt0042192                    All About Eve  1950   \n",
       "25   136  tt0112641                           Casino  1995   \n",
       "26   139  tt0469494              There Will Be Blood  2007   \n",
       "27   154  tt0266543                     Finding Nemo  2003   \n",
       "28   161  tt2096673                       Inside Out  2015   \n",
       "29   167  tt0117951                    Trainspotting  1996   \n",
       "30   171  tt1205489                      Gran Torino  2008   \n",
       "31   178  tt4729430                            Klaus  2019   \n",
       "32   202  tt0198781                   Monsters, Inc.  2001   \n",
       "33   207  tt0046438                      Tokyo Story  1953   \n",
       "34   213  tt0382932                      Ratatouille  2007   \n",
       "35   219  tt0074958                          Network  1976   \n",
       "36   224  tt0048473                  Pather Panchali  1955   \n",
       "37   229  tt0113247                         La haine  1995   \n",
       "38   233  tt0032551              The Grapes of Wrath  1940   \n",
       "39   238  tt0061512                   Cool Hand Luke  1967   \n",
       "40   240  tt0053198                    The 400 Blows  1959   \n",
       "41   247  tt1454029                         The Help  2011   \n",
       "42   248  tt0103639                          Aladdin  1992   \n",
       "\n",
       "                                    link imbd_votes  imbd_rating certificate  \\\n",
       "0   https://www.imdb.com/title/tt0111161  2,711,075          9.3           R   \n",
       "1   https://www.imdb.com/title/tt0068646  1,882,829          9.2           R   \n",
       "2   https://www.imdb.com/title/tt0071562  1,285,350          9.0           R   \n",
       "3   https://www.imdb.com/title/tt0050083    800,954          9.0    Approved   \n",
       "4   https://www.imdb.com/title/tt0110912  2,081,489          8.9           R   \n",
       "5   https://www.imdb.com/title/tt0137523  2,154,995          8.8           R   \n",
       "6   https://www.imdb.com/title/tt0073486  1,017,354          8.7         18+   \n",
       "7   https://www.imdb.com/title/tt0317248    763,772          8.6           R   \n",
       "8   https://www.imdb.com/title/tt0120586  1,132,911          8.5           R   \n",
       "9   https://www.imdb.com/title/tt0169547  1,164,109          8.4           R   \n",
       "10  https://www.imdb.com/title/tt2380307    521,455          8.4          PG   \n",
       "11  https://www.imdb.com/title/tt0114709  1,005,591          8.3           G   \n",
       "12  https://www.imdb.com/title/tt0087843    356,429          8.3           R   \n",
       "13  https://www.imdb.com/title/tt0180093    852,453          8.3     Unrated   \n",
       "14  https://www.imdb.com/title/tt0435761    845,636          8.3           G   \n",
       "15  https://www.imdb.com/title/tt8267604     92,871          8.4           R   \n",
       "16  https://www.imdb.com/title/tt2106476    336,241          8.3           R   \n",
       "17  https://www.imdb.com/title/tt0044741     80,354          8.3   Not Rated   \n",
       "18  https://www.imdb.com/title/tt0086250    853,851          8.3           R   \n",
       "19  https://www.imdb.com/title/tt0056592    319,590          8.3    Approved   \n",
       "20  https://www.imdb.com/title/tt1049413  1,056,335          8.3          PG   \n",
       "21  https://www.imdb.com/title/tt1832382    247,485          8.3       PG-13   \n",
       "22  https://www.imdb.com/title/tt0075314    848,183          8.2           R   \n",
       "23  https://www.imdb.com/title/tt0040522    165,771          8.3   Not Rated   \n",
       "24  https://www.imdb.com/title/tt0042192    132,775          8.2      Passed   \n",
       "25  https://www.imdb.com/title/tt0112641    528,069          8.2           R   \n",
       "26  https://www.imdb.com/title/tt0469494    595,129          8.2           R   \n",
       "27  https://www.imdb.com/title/tt0266543  1,055,095          8.2           G   \n",
       "28  https://www.imdb.com/title/tt2096673    725,352          8.2          PG   \n",
       "29  https://www.imdb.com/title/tt0117951    694,832          8.1           R   \n",
       "30  https://www.imdb.com/title/tt1205489    783,124          8.1           R   \n",
       "31  https://www.imdb.com/title/tt4729430    162,886          8.2          PG   \n",
       "32  https://www.imdb.com/title/tt0198781    920,862          8.1           G   \n",
       "33  https://www.imdb.com/title/tt0046438     63,208          8.2   Not Rated   \n",
       "34  https://www.imdb.com/title/tt0382932    752,323          8.1           G   \n",
       "35  https://www.imdb.com/title/tt0074958    161,819          8.1           R   \n",
       "36  https://www.imdb.com/title/tt0048473     34,328          8.3   Not Rated   \n",
       "37  https://www.imdb.com/title/tt0113247    178,165          8.1   Not Rated   \n",
       "38  https://www.imdb.com/title/tt0032551     95,146          8.1      Passed   \n",
       "39  https://www.imdb.com/title/tt0061512    179,672          8.1          GP   \n",
       "40  https://www.imdb.com/title/tt0053198    120,571          8.1   Not Rated   \n",
       "41  https://www.imdb.com/title/tt1454029    466,011          8.1       PG-13   \n",
       "42  https://www.imdb.com/title/tt0103639    429,219          8.0           G   \n",
       "\n",
       "   duration                       genre  ...  \\\n",
       "0    2h 22m                       Drama  ...   \n",
       "1    2h 55m                 Crime,Drama  ...   \n",
       "2    3h 22m                 Crime,Drama  ...   \n",
       "3    1h 36m                 Crime,Drama  ...   \n",
       "4    2h 34m                 Crime,Drama  ...   \n",
       "5    2h 19m                       Drama  ...   \n",
       "6    2h 13m                       Drama  ...   \n",
       "7    2h 10m                 Crime,Drama  ...   \n",
       "8    1h 59m                 Crime,Drama  ...   \n",
       "9     2h 2m                       Drama  ...   \n",
       "10   1h 45m  Animation,Adventure,Comedy  ...   \n",
       "11   1h 21m  Animation,Adventure,Comedy  ...   \n",
       "12   3h 49m                 Crime,Drama  ...   \n",
       "13   1h 42m                       Drama  ...   \n",
       "14   1h 43m  Animation,Adventure,Comedy  ...   \n",
       "15    2h 6m                       Drama  ...   \n",
       "16   1h 55m                       Drama  ...   \n",
       "17   2h 23m                       Drama  ...   \n",
       "18   2h 50m                 Crime,Drama  ...   \n",
       "19    2h 9m                 Crime,Drama  ...   \n",
       "20   1h 36m  Animation,Adventure,Comedy  ...   \n",
       "21    2h 3m                       Drama  ...   \n",
       "22   1h 54m                 Crime,Drama  ...   \n",
       "23   1h 29m                       Drama  ...   \n",
       "24   2h 18m                       Drama  ...   \n",
       "25   2h 58m                 Crime,Drama  ...   \n",
       "26   2h 38m                       Drama  ...   \n",
       "27   1h 40m  Animation,Adventure,Comedy  ...   \n",
       "28   1h 35m  Animation,Adventure,Comedy  ...   \n",
       "29   1h 33m                       Drama  ...   \n",
       "30   1h 56m                       Drama  ...   \n",
       "31   1h 36m  Animation,Adventure,Comedy  ...   \n",
       "32   1h 32m  Animation,Adventure,Comedy  ...   \n",
       "33   2h 16m                       Drama  ...   \n",
       "34   1h 51m  Animation,Adventure,Comedy  ...   \n",
       "35    2h 1m                       Drama  ...   \n",
       "36    2h 5m                       Drama  ...   \n",
       "37   1h 38m                 Crime,Drama  ...   \n",
       "38    2h 9m                       Drama  ...   \n",
       "39    2h 7m                 Crime,Drama  ...   \n",
       "40   1h 39m                 Crime,Drama  ...   \n",
       "41   2h 26m                       Drama  ...   \n",
       "42   1h 30m  Animation,Adventure,Comedy  ...   \n",
       "\n",
       "                              director_name  \\\n",
       "0                            Frank Darabont   \n",
       "1                      Francis Ford Coppola   \n",
       "2                      Francis Ford Coppola   \n",
       "3                              Sidney Lumet   \n",
       "4                         Quentin Tarantino   \n",
       "5                             David Fincher   \n",
       "6                              Milos Forman   \n",
       "7             Fernando Meirelles,Kátia Lund   \n",
       "8                                 Tony Kaye   \n",
       "9                                Sam Mendes   \n",
       "10                Lee Unkrich,Adrian Molina   \n",
       "11                            John Lasseter   \n",
       "12                             Sergio Leone   \n",
       "13                         Darren Aronofsky   \n",
       "14                              Lee Unkrich   \n",
       "15                            Nadine Labaki   \n",
       "16                        Thomas Vinterberg   \n",
       "17                           Akira Kurosawa   \n",
       "18                           Brian De Palma   \n",
       "19                          Robert Mulligan   \n",
       "20                 Pete Docter,Bob Peterson   \n",
       "21                           Asghar Farhadi   \n",
       "22                          Martin Scorsese   \n",
       "23                         Vittorio De Sica   \n",
       "24                     Joseph L. Mankiewicz   \n",
       "25                          Martin Scorsese   \n",
       "26                     Paul Thomas Anderson   \n",
       "27               Andrew Stanton,Lee Unkrich   \n",
       "28            Pete Docter,Ronnie Del Carmen   \n",
       "29                              Danny Boyle   \n",
       "30                           Clint Eastwood   \n",
       "31      Sergio Pablos,Carlos Martínez López   \n",
       "32  Pete Docter,David Silverman,Lee Unkrich   \n",
       "33                             Yasujirô Ozu   \n",
       "34                    Brad Bird,Jan Pinkava   \n",
       "35                             Sidney Lumet   \n",
       "36                             Satyajit Ray   \n",
       "37                        Mathieu Kassovitz   \n",
       "38                                John Ford   \n",
       "39                         Stuart Rosenberg   \n",
       "40                        François Truffaut   \n",
       "41                              Tate Taylor   \n",
       "42                 Ron Clements,John Musker   \n",
       "\n",
       "                                            writer_id  \\\n",
       "0                                 nm0000175,nm0001104   \n",
       "1                                 nm0701374,nm0000338   \n",
       "2                                 nm0000338,nm0701374   \n",
       "3                                           nm0741627   \n",
       "4                                 nm0000233,nm0000812   \n",
       "5                                 nm0657333,nm0880243   \n",
       "6   tt0073486,nm0369142,nm0325743,nm0450181,tt0073486   \n",
       "7                                 nm0513130,nm1130251   \n",
       "8                                           nm0571346   \n",
       "9                                           nm0050332   \n",
       "10  tt2380307,nm0881279,nm0441735,nm0017690,tt2380307   \n",
       "11  tt0114709,nm0005124,nm0230032,nm0004056,tt0114709   \n",
       "12  tt0087843,nm0340580,nm0073053,nm0207401,tt0087843   \n",
       "13                                nm0782968,nm0004716   \n",
       "14  tt0435761,nm0005124,nm0004056,nm0881279,tt0435761   \n",
       "15  tt8267604,nm1701024,nm2764802,nm9878616,tt8267604   \n",
       "16                                nm0899121,nm2105585   \n",
       "17                      nm0000041,nm0368074,nm0644823   \n",
       "18  tt0086250,nm0000231,nm0001328,nm0372942,tt0086250   \n",
       "19                                nm0497369,nm0285210   \n",
       "20                      nm0230032,nm0677037,nm0565336   \n",
       "21                                          nm1410815   \n",
       "22                                          nm0001707   \n",
       "23  tt0040522,nm0953790,nm0059030,nm0080755,tt0040522   \n",
       "24                                nm0000581,nm0650581   \n",
       "25                                nm0683380,nm0000217   \n",
       "26                                nm0000759,nm0801737   \n",
       "27                      nm0004056,nm0677037,nm0721675   \n",
       "28  tt2096673,nm0230032,nm0215455,nm0498834,tt2096673   \n",
       "29                                nm0920543,nm0388076   \n",
       "30                                nm1010405,nm3164738   \n",
       "31                      nm0655053,nm2700235,nm2082813   \n",
       "32  tt0198781,nm0230032,nm0191717,nm0682066,tt0198781   \n",
       "33                                nm0633792,nm0654868   \n",
       "34  tt0382932,nm0083348,nm0684342,nm0135296,tt0382932   \n",
       "35                                          nm0154665   \n",
       "36                                nm0051808,nm0006249   \n",
       "37                                          nm0440913   \n",
       "38                                nm0425913,nm0825705   \n",
       "39                      nm0668914,nm0682757,nm0237543   \n",
       "40                                nm0000076,nm0610115   \n",
       "41                                nm0853238,nm3543826   \n",
       "42  tt0103639,nm0166256,nm0615780,nm0254645,tt0103639   \n",
       "\n",
       "                                          writer_name  \\\n",
       "0                         Stephen King,Frank Darabont   \n",
       "1                     Mario Puzo,Francis Ford Coppola   \n",
       "2                     Francis Ford Coppola,Mario Puzo   \n",
       "3                                       Reginald Rose   \n",
       "4                       Quentin Tarantino,Roger Avary   \n",
       "5                            Chuck Palahniuk,Jim Uhls   \n",
       "6       Writers,Lawrence Hauben,Bo Goldman,Ken Kesey,   \n",
       "7                        Paulo Lins,Bráulio Mantovani   \n",
       "8                                       David McKenna   \n",
       "9                                           Alan Ball   \n",
       "10    Writers,Lee Unkrich,Jason Katz,Matthew Aldrich,   \n",
       "11  Writers,John Lasseter,Pete Docter,Andrew Stanton,   \n",
       "12  Writers,Harry Grey,Leonardo Benvenuti,Piero De...   \n",
       "13                  Hubert Selby Jr.,Darren Aronofsky   \n",
       "14  Writers,John Lasseter,Andrew Stanton,Lee Unkrich,   \n",
       "15  Writers,Nadine Labaki,Jihad Hojeily,Michelle K...   \n",
       "16                  Thomas Vinterberg,Tobias Lindholm   \n",
       "17       Akira Kurosawa,Shinobu Hashimoto,Hideo Oguni   \n",
       "18       Writers,Oliver Stone,Howard Hawks,Ben Hecht,   \n",
       "19                            Harper Lee,Horton Foote   \n",
       "20              Pete Docter,Bob Peterson,Tom McCarthy   \n",
       "21                                     Asghar Farhadi   \n",
       "22                                      Paul Schrader   \n",
       "23  Writers,Cesare Zavattini,Luigi Bartolini,Orest...   \n",
       "24                      Joseph L. Mankiewicz,Mary Orr   \n",
       "25                   Nicholas Pileggi,Martin Scorsese   \n",
       "26                Paul Thomas Anderson,Upton Sinclair   \n",
       "27         Andrew Stanton,Bob Peterson,David Reynolds   \n",
       "28  Writers,Pete Docter,Ronnie Del Carmen,Meg LeFa...   \n",
       "29                            Irvine Welsh,John Hodge   \n",
       "30                         Nick Schenk,Dave Johannson   \n",
       "31               Sergio Pablos,Jim Mahoney,Zach Lewis   \n",
       "32      Writers,Pete Docter,Jill Culton,Jeff Pidgeon,   \n",
       "33                             Kôgo Noda,Yasujirô Ozu   \n",
       "34      Writers,Brad Bird,Jan Pinkava,Jim Capobianco,   \n",
       "35                                    Paddy Chayefsky   \n",
       "36          Bibhutibhushan Bandyopadhyay,Satyajit Ray   \n",
       "37                                  Mathieu Kassovitz   \n",
       "38                    Nunnally Johnson,John Steinbeck   \n",
       "39              Donn Pearce,Frank Pierson,Hal Dresner   \n",
       "40                    François Truffaut,Marcel Moussy   \n",
       "41                       Tate Taylor,Kathryn Stockett   \n",
       "42      Writers,Ron Clements,John Musker,Ted Elliott,   \n",
       "\n",
       "                                            storyline  \\\n",
       "0   Over the course of several years, two convicts...   \n",
       "1   The aging patriarch of an organized crime dyna...   \n",
       "2   The early life and career of Vito Corleone in ...   \n",
       "3   The jury in a New York City murder trial is fr...   \n",
       "4   The lives of two mob hitmen, a boxer, a gangst...   \n",
       "5   An insomniac office worker and a devil-may-car...   \n",
       "6   In the Fall of 1963, a Korean War veteran and ...   \n",
       "7   In the slums of Rio, two kids' paths diverge a...   \n",
       "8   A former neo-nazi skinhead tries to prevent hi...   \n",
       "9   A sexually frustrated suburban father has a mi...   \n",
       "10  Aspiring musician Miguel, confronted with his ...   \n",
       "11  A cowboy doll is profoundly threatened and jea...   \n",
       "12  A former Prohibition-era Jewish gangster retur...   \n",
       "13  The drug-induced utopias of four Coney Island ...   \n",
       "14  The toys are mistakenly delivered to a day-car...   \n",
       "15  While serving a five-year sentence for a viole...   \n",
       "16  A teacher lives a lonely life, all the while s...   \n",
       "17  A bureaucrat tries to find meaning in his life...   \n",
       "18  In 1980 Miami, a determined Cuban immigrant ta...   \n",
       "19  Atticus Finch, a widowed lawyer in Depression-...   \n",
       "20  78-year-old Carl Fredricksen travels to Paradi...   \n",
       "21  A married couple are faced with a difficult de...   \n",
       "22  A mentally unstable veteran works as a nightti...   \n",
       "23  In post-war Italy, a working-class man's bicyc...   \n",
       "24  A seemingly timid but secretly ruthless ingénu...   \n",
       "25  A tale of greed, deception, money, power, and ...   \n",
       "26  A story of family, religion, hatred, oil and m...   \n",
       "27  After his son is captured in the Great Barrier...   \n",
       "28  After young Riley is uprooted from her Midwest...   \n",
       "29  Renton, deeply immersed in the Edinburgh drug ...   \n",
       "30  Disgruntled Korean War veteran Walt Kowalski s...   \n",
       "31  A simple act of kindness always sparks another...   \n",
       "32  In order to power the city, monsters have to s...   \n",
       "33  An old couple visit their children and grandch...   \n",
       "34  A rat who can cook makes an unusual alliance w...   \n",
       "35  A television network cynically exploits a dera...   \n",
       "36  Impoverished priest Harihar Ray, dreaming of a...   \n",
       "37  24 hours in the lives of three young men in th...   \n",
       "38  An Oklahoma family, driven off their farm by t...   \n",
       "39  A laid back Southern man is sentenced to two y...   \n",
       "40  A young boy, left without attention, delves in...   \n",
       "41  An aspiring author during the civil rights mov...   \n",
       "42  A kindhearted street urchin and a power-hungry...   \n",
       "\n",
       "                                              user_id  \\\n",
       "0   ur16161013,ur15311310,ur0265899,ur16117882,ur1...   \n",
       "1   ur24740649,ur86182727,ur15794099,ur15311310,ur...   \n",
       "2   ur0176092,ur0688559,ur92260614,ur0200644,ur117...   \n",
       "3   ur1318549,ur0643062,ur0688559,ur20552756,ur945...   \n",
       "4   ur0556667,ur76062573,ur118818818,ur15794099,ur...   \n",
       "5   ur113529171,ur2860723,ur0482513,ur15794099,ur2...   \n",
       "6   ur4409266,ur3728510,ur2093818,ur3922673,ur8949...   \n",
       "7   ur20552756,ur1793363,ur2898520,ur2950767,ur441...   \n",
       "8   ur1416505,ur102612153,ur16117882,ur2707735,ur4...   \n",
       "9   ur2354731,ur0476267,ur1293485,ur0455949,ur0363...   \n",
       "10  ur7813355,ur38077550,ur2467618,ur118287292,ur7...   \n",
       "11  ur1002035,ur4445210,ur3922673,ur1173088,ur0453...   \n",
       "12  ur44112735,ur3922673,ur1002035,ur110513836,ur0...   \n",
       "13  ur119249824,ur2467618,ur1002035,ur1425588,ur10...   \n",
       "14  ur0892646,ur2488512,ur0317399,ur21833424,ur338...   \n",
       "15  ur87850731,ur2467618,ur17825945,ur60343557,ur2...   \n",
       "16  ur0278527,ur22668817,ur0453068,ur2467618,ur344...   \n",
       "17  ur1559834,ur0453068,ur2248099,ur0278527,ur4888...   \n",
       "18  ur0482513,ur3774967,ur1252120,ur3131494,ur8785...   \n",
       "19  ur2339662,ur2286500,ur4103165,ur2093818,ur0187...   \n",
       "20  ur2898520,ur87850731,ur20552756,ur1622466,ur08...   \n",
       "21  ur2488512,ur2152472,ur1419266,ur20315186,ur122...   \n",
       "22  ur0945066,ur1002035,ur1293485,ur2898520,ur2055...   \n",
       "23  ur0688559,ur0453068,ur1282070,ur2339662,ur2488...   \n",
       "24  ur2488512,ur20552756,ur12596887,ur2420383,ur01...   \n",
       "25  ur1293485,ur2467618,ur31261952,ur0614400,ur017...   \n",
       "26  ur16117882,ur0482513,ur19117722,ur55517503,ur4...   \n",
       "27  ur2020269,ur0556667,ur0375636,ur3174947,ur9469...   \n",
       "28  ur126297403,ur1845755,ur78948186,ur20552756,ur...   \n",
       "29  ur0278527,ur1002035,ur4569900,ur11842025,ur157...   \n",
       "30  ur11842025,ur80922659,ur1293485,ur0076091,ur95...   \n",
       "31  ur6201371,ur0499651,ur53096283,ur83822756,ur54...   \n",
       "32  ur2000855,ur1173088,ur1416505,ur4445210,ur1391...   \n",
       "33  ur3608743,ur1098460,ur14908520,ur0491610,ur007...   \n",
       "34  ur88612516,ur2467618,ur0278527,ur4103165,ur775...   \n",
       "35  ur0688559,ur0384847,ur9521536,ur0541468,ur2420...   \n",
       "36  ur0391152,ur1282070,ur0239428,ur5788055,ur4103...   \n",
       "37  ur2707735,ur15794099,ur0491610,ur1741394,ur121...   \n",
       "38  ur2483625,ur0562732,ur4532636,ur2444068,ur4939...   \n",
       "39  ur15794099,ur0806494,ur13134536,ur2286500,ur04...   \n",
       "40  ur0150331,ur2339662,ur7790394,ur1174211,ur2860...   \n",
       "41  ur0806494,ur1391596,ur24207576,ur2955724,ur221...   \n",
       "42  ur1293485,ur1416505,ur4445210,ur4234119,ur0909...   \n",
       "\n",
       "                                            user_name  \\\n",
       "0   hitchcockthelegend,Sleepin_Dragon,EyeDunno,ale...   \n",
       "1   CalRhys,andrewburgereviews,gogoschka-1,Sleepin...   \n",
       "2   Nazi_Fighter_David,tfrizzell,umunir-36959,DanB...   \n",
       "3   uds3,tedg,tfrizzell,TheLittleSongbird,henrique...   \n",
       "4   kylopod,bevo-13678,SebMoz,gogoschka-1,gautamma...   \n",
       "5   Pukeonthestreet,grantss,Leofwine_draca,gogosch...   \n",
       "6   Wuchakk,pyrocitor,TBJCSKCNRRQTreviews,philip_v...   \n",
       "7   TheLittleSongbird,Decko_koji_obecava,SnoopySty...   \n",
       "8   Boba_Fett1138,behbehseta,alexkolokotronis,clas...   \n",
       "9   the-evil-cult,RueMorgue,Smells_Like_Cheese,Ant...   \n",
       "10  neil-476,jon-stokes21-539-17875,planktonrules,...   \n",
       "11  bob the moo,ccthemovieman-1,philip_vanderveken...   \n",
       "12  A_Different_Drummer,philip_vanderveken,bob the...   \n",
       "13  hwm-05554,planktonrules,bob the moo,Danfish,mi...   \n",
       "14  dee.reid,claudio_carvalho,DICK STEEL,The_Fifth...   \n",
       "15  MrHeraclius,planktonrules,thesar-2,andrewestre...   \n",
       "16  Hitchcoc,FlashCallahan,Quinoa1984,planktonrule...   \n",
       "17  OttoVonB,Quinoa1984,The_Void,Hitchcoc,lee_eise...   \n",
       "18  Leofwine_draca,Aditya_Gokhale,akpiggott,TruPre...   \n",
       "19  FilmOtaku,clydestuff,Xstal,TBJCSKCNRRQTreviews...   \n",
       "20  SnoopyStyle,MrHeraclius,TheLittleSongbird,DonF...   \n",
       "21  claudio_carvalho,krisrox,stensson,Radu_A,Ramas...   \n",
       "22  BA_Harrison,bob the moo,Smells_Like_Cheese,Sno...   \n",
       "23  tfrizzell,Quinoa1984,ItalianGerry,FilmOtaku,cl...   \n",
       "24  claudio_carvalho,TheLittleSongbird,JohnHowardR...   \n",
       "25  Smells_Like_Cheese,planktonrules,Movie-ManDan,...   \n",
       "26  alexkolokotronis,Leofwine_draca,murtaza_mma,br...   \n",
       "27  Coventry,kylopod,Buddy-51,mjw2305,PizzicatoFis...   \n",
       "28  pickle-92642,Phil_Chester,Animany94,TheLittleS...   \n",
       "29  Hitchcoc,bob the moo,Prismark10,ametaphysicals...   \n",
       "30  ametaphysicalshark,dk777,Smells_Like_Cheese,Ke...   \n",
       "31  cricketbat,Joejoesan,andymhancock,CubsandCultu...   \n",
       "32  vchimpanzee,MovieAddict2016,Boba_Fett1138,ccth...   \n",
       "33  EUyeshima,Galina_movie_fan,GyatsoLa,howard.sch...   \n",
       "34  cinephile-27690,planktonrules,Hitchcoc,Xstal,P...   \n",
       "35  tfrizzell,nycritic,dead47548,cchase,Lechuguill...   \n",
       "36  zetes,ItalianGerry,harry-76,briancham1994,Xsta...   \n",
       "37  classicsoncall,gogoschka-1,howard.schumann,Bog...   \n",
       "38  bkoganbing,Anonymous_Maxine,evanston_dad,inkbl...   \n",
       "39  gogoschka-1,ferguson-6,Michael_Elliott,clydest...   \n",
       "40  stryker-5,FilmOtaku,Camera-Obscura,Snow Leopar...   \n",
       "41  ferguson-6,JohnDeSando,taylor_king-890-815491,...   \n",
       "42  Smells_Like_Cheese,Boba_Fett1138,ccthemovieman...   \n",
       "\n",
       "                                            review_id  \\\n",
       "0   rw2284594,rw6606154,rw1221355,rw1822343,rw1288...   \n",
       "1   rw3038370,rw4756923,rw4059579,rw6568526,rw1897...   \n",
       "2   rw0135607,rw0135487,rw5049900,rw0135526,rw0135...   \n",
       "3   rw0060044,rw0060025,rw0060034,rw2262425,rw5448...   \n",
       "4   rw1218264,rw5590710,rw6261036,rw3055511,rw5626...   \n",
       "5   rw5476552,rw3001234,rw3504332,rw2923012,rw2251...   \n",
       "6   rw2692389,rw0998871,rw0143219,rw0143229,rw4245...   \n",
       "7   rw3727515,rw0871139,rw3259235,rw0952393,rw0980...   \n",
       "8   rw1130372,rw5043820,rw2016374,rw2545128,rw1144...   \n",
       "9   rw0593815,rw0591850,rw0592440,rw0592084,rw0592...   \n",
       "10  rw4150044,rw3872249,rw4430985,rw5914126,rw3872...   \n",
       "11  rw0373152,rw1602122,rw0984980,rw0373135,rw0373...   \n",
       "12  rw2900651,rw0213795,rw0213687,rw5738686,rw0213...   \n",
       "13  rw6065804,rw3530827,rw0944395,rw0611000,rw5957...   \n",
       "14  rw2333889,rw2339211,rw2265648,rw2257007,rw2265...   \n",
       "15  rw5480034,rw5928544,rw6022577,rw4461566,rw4991...   \n",
       "16  rw2951920,rw2917732,rw3242626,rw2944654,rw2715...   \n",
       "17  rw0047035,rw0047044,rw0979541,rw2139951,rw3631...   \n",
       "18  rw3596039,rw1242450,rw0205030,rw1584852,rw5505...   \n",
       "19  rw0079616,rw0079634,rw8518800,rw0079653,rw0079...   \n",
       "20  rw2931192,rw5485117,rw2251012,rw2073643,rw2074...   \n",
       "21  rw2548767,rw2482803,rw2501181,rw2386488,rw2539...   \n",
       "22  rw3214800,rw1291137,rw0150574,rw2864089,rw2366...   \n",
       "23  rw0038353,rw0038352,rw0038368,rw0038374,rw2225...   \n",
       "24  rw1195687,rw2076000,rw3793117,rw2210508,rw0041...   \n",
       "25  rw0358218,rw7700011,rw3282257,rw0358109,rw1660...   \n",
       "26  rw1840254,rw2580474,rw2133941,rw7817140,rw1859...   \n",
       "27  rw0773564,rw1194203,rw0773545,rw1004133,rw1320...   \n",
       "28  rw7383760,rw6431251,rw3865673,rw3283511,rw3265...   \n",
       "29  rw5261062,rw0398029,rw3602356,rw1838512,rw4190...   \n",
       "30  rw1990728,rw6510512,rw2041497,rw1989879,rw1990...   \n",
       "31  rw5341855,rw5256642,rw5261806,rw5310907,rw6417...   \n",
       "32  rw0954846,rw0648075,rw0648108,rw1416189,rw0647...   \n",
       "33  rw1237040,rw0050722,rw1633160,rw0050710,rw0050...   \n",
       "34  rw4446684,rw1690172,rw4825842,rw6186008,rw1676...   \n",
       "35  rw0148846,rw1026099,rw1796611,rw1160445,rw2103...   \n",
       "36  rw0055920,rw1458890,rw0055915,rw8270909,rw7391...   \n",
       "37  rw3871855,rw2926427,rw0363116,rw0363111,rw1357...   \n",
       "38  rw1487672,rw0021724,rw1288247,rw4131945,rw1649...   \n",
       "39  rw2923989,rw2630815,rw1960219,rw0097077,rw3633...   \n",
       "40  rw0068933,rw0068970,rw1524167,rw1082274,rw3330...   \n",
       "41  rw2473566,rw2472337,rw2472299,rw2697863,rw2488...   \n",
       "42  rw0302749,rw0950861,rw1571053,rw2534639,rw0302...   \n",
       "\n",
       "                                         review_title  \\\n",
       "0   Some birds aren't meant to be caged.,An incred...   \n",
       "1   The Pinnacle Of Flawless Films!,An offer so go...   \n",
       "2   Breathtaking in its scope and tragic grandeur....   \n",
       "3   The over-used term \"classic movie\" really come...   \n",
       "4   The masterpiece without a message,Shotguns,A m...   \n",
       "5   A great movie you can watch again and again,Su...   \n",
       "6   The spirit of freedom vs. the spirit of legal-...   \n",
       "7   A Brazilian masterwork,Gangs of Rio,The Godfat...   \n",
       "8   One of the most powerful movies I have ever se...   \n",
       "9   Entertaining and Thought-Provoking.,An Oscar w...   \n",
       "10  Succeeds on all levels,Shocked!,What's not to ...   \n",
       "11  Technically impressive with great script and s...   \n",
       "12  Last, butchered, unappreciated, work from one ...   \n",
       "13  Great movie, I hated every minute of it,A visu...   \n",
       "14  An amazing third \"Story\",Wonderful and Touchin...   \n",
       "15  Capernaum,Well made but very difficult to watc...   \n",
       "16  Once Again: The Children's Hour,He doesn't hav...   \n",
       "17  \"Only when he learned he would die did he star...   \n",
       "18  A stone cold, 100% gangster classic,\"You wanna...   \n",
       "19  One of the most important films of all time,No...   \n",
       "20  Real tear jerker opening,Best animated movies ...   \n",
       "21  Mankind Is Flawed,Do yourself a favor - make s...   \n",
       "22  A classy character study of a disturbed indivi...   \n",
       "23  Quiet Desperation---Italian Style.,Another one...   \n",
       "24  A Magnificent Timeless Tale of Ambition, Manip...   \n",
       "25  \"Now it looks like Disney Land\",I enjoyed this...   \n",
       "26  The Truth Hurts,Excellent, gutsy filmmaking,Th...   \n",
       "27  Yes, it's THAT good !!,Pixar's best feature to...   \n",
       "28  Classic for the new generation? Yes!,Not for y...   \n",
       "29  Now I See Why,Hilarious, imaginative and very ...   \n",
       "30  Yet another Eastwood gem,Gran Torino,Clint's b...   \n",
       "31  In a sea of generic Christmas movies, Klaus st...   \n",
       "32  Adorable, funny, perfect voice casting for the...   \n",
       "33  Ozu's Quietly Brilliant Masterpiece Deserves Y...   \n",
       "34  \"Not everyone can become a great artist; but a...   \n",
       "35  It Is More Than a Film, It Is Like a Crystal B...   \n",
       "36  Absolutely Perfect. One of the best films ever...   \n",
       "37  \"...it's not how you fall that matters. It's h...   \n",
       "38  Economic Dislocation,John Ford's stark portray...   \n",
       "39  \"Luke\" is a character Newman was born to play ...   \n",
       "40  \"N'Oublie Pas Les Ordures\",One of the shining ...   \n",
       "41  Minny Don't Burn Chicken,Ready to burst . . .,...   \n",
       "42  I'd put it in with the Disney classics,Great s...   \n",
       "\n",
       "                                       review_content review_content_count  \n",
       "0   The Shawshank Redemption is written and direct...                    1  \n",
       "1   'The Godfather' is the pinnacle of flawless fi...                    1  \n",
       "2   Coppola's masterpiece is rivaled only by \"The ...                    1  \n",
       "3   This once-in-a-generation masterpiece simply h...                    1  \n",
       "4   One of the early scenes in \"Pulp Fiction\" feat...                    1  \n",
       "5   Because you'll probably be confused the first ...                    1  \n",
       "6   Set in the early 60s, the story involves R.P. ...                    1  \n",
       "7   Such an amazing film that deserves the accolad...                    1  \n",
       "8   I was expecting a kind of a moralistic movie w...                    1  \n",
       "9   Of the 250+ films I've seen and rated on IMDb,...                    1  \n",
       "10  Music is banned in Miguel's household after hi...                    1  \n",
       "11  Andy's toys live a reasonable life of fun and ...                    1  \n",
       "12  ... Directors of all time. Let's start with a ...                    1  \n",
       "13  This movie is about how drugs can affect your ...                    1  \n",
       "14  Lee Unkrinch directed \"Toy Story 3,\" the third...                    1  \n",
       "15  Zain Al Rafeea is a terrific revelation in thi...                    1  \n",
       "16  Having worked as a teacher for some forty year...                    1  \n",
       "17  Ikiru (\"to live\")is a Kurosawa film devoid of ...                    1  \n",
       "18  Words alone cannot express how much I love thi...                    1  \n",
       "19  To Kill a Mockingbird is the movie based on th...                    1  \n",
       "20  Carl Fredricksen (Ed Asner) as a young quiet k...                    1  \n",
       "21  In Tehran, the teacher Simin (Leila Hatami) ha...                    1  \n",
       "22  Insomniac Vietnam veteran Travis Bickle (Rober...                    1  \n",
       "23  In post-World War II Italy poverty is a dire r...                    1  \n",
       "24  The ambitious Eve Harrington (Anne Baxter) get...                    1  \n",
       "25  This is one of the best films of the 90's hand...                    1  \n",
       "26  People did not like this movie for a simple re...                    1  \n",
       "27  I'll be totally honest and confirm to you that...                    1  \n",
       "28  I just knew this was gonna be amazing. Such a ...                    1  \n",
       "29  I'm an old guy. I'm also a movie fan with an o...                    1  \n",
       "30  I feel like I should let everyone reading this...                    1  \n",
       "31  Klaus is an amusing new twist on a very old st...                    1  \n",
       "32  I thought Billy Crystal and John Goodman were ...                    1  \n",
       "33  I think this movie is amazing for reasons I wa...                    1  \n",
       "34  That's what the food critic, Anton Ego, says i...                    1  \n",
       "35  \"Network\". If there was ever a film that fores...                    1  \n",
       "36  It is a little known fact that India produces ...                    1  \n",
       "37  After watching this film I reflected back on a...                    1  \n",
       "38  John Ford's film of John Steinbeck's novel has...                    1  \n",
       "39  This film got me from the first frame to the l...                    1  \n",
       "40  So here it is, the landmark film which ushered...                    1  \n",
       "41  Greetings again from the darkness. The film is...                    1  \n",
       "42  Aladdin is such an awesome move that still get...                    1  \n",
       "\n",
       "[43 rows x 23 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_merged_data = pd.merge(df2 ,movie_review_count, on='movie_id')\n",
    "new_merged_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "fabfc82f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = new_merged_data[['review_content_count']]\n",
    "y = new_merged_data['imbd_rating']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "reg = linear_model.LinearRegression()\n",
    "reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c7a37c40",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean squared error is: 0.11424145013267681\n"
     ]
    }
   ],
   "source": [
    "mean_squared_error(y_test, y_pred)\n",
    "print ('Mean squared error is:', mean_squared_error(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75f51a39",
   "metadata": {},
   "source": [
    "### Q4 Apply the kMeans clustering method to this data. The first step is to select just the numerical fields in the data. The first task is to find out what the members of each cluster are. To do this, generate a set of cluster labels using km.predict() on your original data and add this to the data frame. Now, explore the difference between each cluster:\n",
    "\n",
    "- find the mean value for each column by cluster\n",
    "- from these means, can you characterise the three clusters that were found\n",
    "- Identify two columns that seem to be more distinct between clusters, use these to plot the data with different colours for each cluster to visualise the result of clustering. Comment on the separation of clusters in your plot.\n",
    "- Repeat the experiment with a larger number of clusters. Do more clusters make it easier to distinguish the clusters?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "7bb66baa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>year</th>\n",
       "      <th>imbd_rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1994</td>\n",
       "      <td>9.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1972</td>\n",
       "      <td>9.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2008</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1974</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1957</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>1993</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2003</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>1966</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>1990</td>\n",
       "      <td>8.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>1946</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>1991</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28</td>\n",
       "      <td>1977</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1991</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30</td>\n",
       "      <td>1985</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>31</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>32</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>33</td>\n",
       "      <td>1960</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>34</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>35</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>36</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>37</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>38</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>39</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>40</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>41</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>42</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>43</td>\n",
       "      <td>1942</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>44</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>45</td>\n",
       "      <td>1962</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>46</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>47</td>\n",
       "      <td>1936</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>48</td>\n",
       "      <td>1968</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>49</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>50</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>51</td>\n",
       "      <td>1979</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>52</td>\n",
       "      <td>1931</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>53</td>\n",
       "      <td>1979</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>54</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>55</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>56</td>\n",
       "      <td>1981</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>57</td>\n",
       "      <td>2008</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>58</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>59</td>\n",
       "      <td>1950</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>60</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>61</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>62</td>\n",
       "      <td>1940</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>63</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>64</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>65</td>\n",
       "      <td>1986</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>66</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>67</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>68</td>\n",
       "      <td>1964</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>69</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>70</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>71</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>72</td>\n",
       "      <td>1984</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>73</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>74</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>75</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>76</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>77</td>\n",
       "      <td>1981</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>78</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>79</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>80</td>\n",
       "      <td>1984</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>81</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>82</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>83</td>\n",
       "      <td>1952</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>84</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>85</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>86</td>\n",
       "      <td>1963</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>87</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>88</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>89</td>\n",
       "      <td>1983</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>90</td>\n",
       "      <td>1968</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>91</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>92</td>\n",
       "      <td>1992</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>93</td>\n",
       "      <td>1985</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>94</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>95</td>\n",
       "      <td>1941</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>96</td>\n",
       "      <td>1931</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>97</td>\n",
       "      <td>1962</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>98</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>99</td>\n",
       "      <td>1952</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>100</td>\n",
       "      <td>1958</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>101</td>\n",
       "      <td>1960</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>102</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>103</td>\n",
       "      <td>1971</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>104</td>\n",
       "      <td>1944</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>105</td>\n",
       "      <td>1987</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>106</td>\n",
       "      <td>1983</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>107</td>\n",
       "      <td>2020</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>108</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>109</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>110</td>\n",
       "      <td>1962</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>111</td>\n",
       "      <td>1973</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>112</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>113</td>\n",
       "      <td>2022</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>114</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>115</td>\n",
       "      <td>1927</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>116</td>\n",
       "      <td>1976</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>117</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>118</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>119</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>120</td>\n",
       "      <td>1989</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>121</td>\n",
       "      <td>1948</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>122</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>123</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>124</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>125</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>126</td>\n",
       "      <td>1965</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>127</td>\n",
       "      <td>2005</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>128</td>\n",
       "      <td>1921</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>129</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>130</td>\n",
       "      <td>2020</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>131</td>\n",
       "      <td>1950</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>132</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>133</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>134</td>\n",
       "      <td>1961</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>135</td>\n",
       "      <td>1985</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>136</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>137</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>138</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>139</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>140</td>\n",
       "      <td>1992</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>141</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>142</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>143</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>144</td>\n",
       "      <td>1993</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>145</td>\n",
       "      <td>1961</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>146</td>\n",
       "      <td>1948</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>147</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>148</td>\n",
       "      <td>1963</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>149</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>150</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>151</td>\n",
       "      <td>1950</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>152</td>\n",
       "      <td>2021</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>153</td>\n",
       "      <td>1982</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>154</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>155</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>156</td>\n",
       "      <td>1974</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>157</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>158</td>\n",
       "      <td>2005</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>159</td>\n",
       "      <td>1939</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>160</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>161</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>162</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>163</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>164</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>165</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>166</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>167</td>\n",
       "      <td>1996</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>168</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>169</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>170</td>\n",
       "      <td>1996</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>171</td>\n",
       "      <td>2008</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>172</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>173</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>174</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>175</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>176</td>\n",
       "      <td>1982</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>177</td>\n",
       "      <td>1925</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>178</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>179</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>180</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>181</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>182</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>183</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>184</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>185</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>186</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>187</td>\n",
       "      <td>1926</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>188</td>\n",
       "      <td>1993</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>189</td>\n",
       "      <td>1949</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>190</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>191</td>\n",
       "      <td>1978</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>192</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>193</td>\n",
       "      <td>1953</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>194</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>195</td>\n",
       "      <td>1924</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>196</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>197</td>\n",
       "      <td>1939</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>198</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>199</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>200</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>201</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>202</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>203</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>204</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>205</td>\n",
       "      <td>1989</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>206</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>207</td>\n",
       "      <td>1953</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>208</td>\n",
       "      <td>1928</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>209</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209</th>\n",
       "      <td>210</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210</th>\n",
       "      <td>211</td>\n",
       "      <td>1976</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211</th>\n",
       "      <td>212</td>\n",
       "      <td>1986</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>213</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>214</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>215</td>\n",
       "      <td>1984</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>216</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>217</td>\n",
       "      <td>1986</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>218</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>219</td>\n",
       "      <td>1976</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>220</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>221</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>222</td>\n",
       "      <td>1939</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>223</td>\n",
       "      <td>1946</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>224</td>\n",
       "      <td>1955</td>\n",
       "      <td>8.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>225</td>\n",
       "      <td>1993</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>226</td>\n",
       "      <td>1973</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>227</td>\n",
       "      <td>1942</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>228</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>229</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>230</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>231</td>\n",
       "      <td>1966</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>232</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>233</td>\n",
       "      <td>1940</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>234</td>\n",
       "      <td>2021</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>235</td>\n",
       "      <td>2005</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>236</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>237</td>\n",
       "      <td>1940</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>238</td>\n",
       "      <td>1967</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>239</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>240</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>241</td>\n",
       "      <td>1965</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>242</td>\n",
       "      <td>1934</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>243</td>\n",
       "      <td>1966</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>244</td>\n",
       "      <td>1979</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>245</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>246</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>247</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>248</td>\n",
       "      <td>1992</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>249</td>\n",
       "      <td>1982</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>250</td>\n",
       "      <td>1990</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     rank  year  imbd_rating\n",
       "0       1  1994          9.3\n",
       "1       2  1972          9.2\n",
       "2       3  2008          9.0\n",
       "3       4  1974          9.0\n",
       "4       5  1957          9.0\n",
       "5       6  1993          9.0\n",
       "6       7  2003          9.0\n",
       "7       8  1994          8.9\n",
       "8       9  2001          8.8\n",
       "9      10  1966          8.8\n",
       "10     11  1994          8.8\n",
       "11     12  1999          8.8\n",
       "12     13  2002          8.8\n",
       "13     14  2010          8.8\n",
       "14     15  1980          8.7\n",
       "15     16  1999          8.7\n",
       "16     17  1990          8.7\n",
       "17     18  1975          8.7\n",
       "18     19  1995          8.6\n",
       "19     20  1954          8.6\n",
       "20     21  1946          8.6\n",
       "21     22  1991          8.6\n",
       "22     23  1998          8.6\n",
       "23     24  2002          8.6\n",
       "24     25  2014          8.6\n",
       "25     26  1997          8.6\n",
       "26     27  1999          8.6\n",
       "27     28  1977          8.6\n",
       "28     29  1991          8.6\n",
       "29     30  1985          8.5\n",
       "30     31  2001          8.6\n",
       "31     32  2002          8.5\n",
       "32     33  1960          8.5\n",
       "33     34  2019          8.5\n",
       "34     35  1994          8.5\n",
       "35     36  1994          8.5\n",
       "36     37  2000          8.5\n",
       "37     38  1998          8.5\n",
       "38     39  2006          8.5\n",
       "39     40  1995          8.5\n",
       "40     41  2006          8.5\n",
       "41     42  2014          8.5\n",
       "42     43  1942          8.5\n",
       "43     44  1988          8.5\n",
       "44     45  1962          8.6\n",
       "45     46  2011          8.5\n",
       "46     47  1936          8.5\n",
       "47     48  1968          8.5\n",
       "48     49  1988          8.5\n",
       "49     50  1954          8.5\n",
       "50     51  1979          8.5\n",
       "51     52  1931          8.5\n",
       "52     53  1979          8.5\n",
       "53     54  2000          8.4\n",
       "54     55  2012          8.4\n",
       "55     56  1981          8.4\n",
       "56     57  2008          8.4\n",
       "57     58  2006          8.4\n",
       "58     59  1950          8.4\n",
       "59     60  1957          8.4\n",
       "60     61  1980          8.4\n",
       "61     62  1940          8.4\n",
       "62     63  2018          8.4\n",
       "63     64  1957          8.4\n",
       "64     65  1986          8.4\n",
       "65     66  2018          8.4\n",
       "66     67  1999          8.4\n",
       "67     68  1964          8.4\n",
       "68     69  2012          8.4\n",
       "69     70  2003          8.4\n",
       "70     71  2009          8.3\n",
       "71     72  1984          8.4\n",
       "72     73  2017          8.4\n",
       "73     74  1995          8.3\n",
       "74     75  2019          8.4\n",
       "75     76  1995          8.4\n",
       "76     77  1981          8.4\n",
       "77     78  2019          8.4\n",
       "78     79  1997          8.3\n",
       "79     80  1984          8.3\n",
       "80     81  1997          8.3\n",
       "81     82  2016          8.4\n",
       "82     83  1952          8.3\n",
       "83     84  2009          8.4\n",
       "84     85  2000          8.3\n",
       "85     86  1963          8.4\n",
       "86     87  2010          8.3\n",
       "87     88  2018          8.4\n",
       "88     89  1983          8.3\n",
       "89     90  1968          8.3\n",
       "90     91  2004          8.3\n",
       "91     92  1992          8.3\n",
       "92     93  1985          8.4\n",
       "93     94  2012          8.3\n",
       "94     95  1941          8.3\n",
       "95     96  1931          8.3\n",
       "96     97  1962          8.3\n",
       "97     98  1959          8.3\n",
       "98     99  1952          8.3\n",
       "99    100  1958          8.3\n",
       "100   101  1960          8.3\n",
       "101   102  2001          8.3\n",
       "102   103  1971          8.3\n",
       "103   104  1944          8.3\n",
       "104   105  1987          8.3\n",
       "105   106  1983          8.3\n",
       "106   107  2020          8.4\n",
       "107   108  2010          8.3\n",
       "108   109  1995          8.3\n",
       "109   110  1962          8.3\n",
       "110   111  1973          8.3\n",
       "111   112  2009          8.3\n",
       "112   113  2022          8.3\n",
       "113   114  2011          8.3\n",
       "114   115  1927          8.3\n",
       "115   116  1976          8.2\n",
       "116   117  1997          8.2\n",
       "117   118  1988          8.2\n",
       "118   119  2000          8.2\n",
       "119   120  1989          8.2\n",
       "120   121  1948          8.3\n",
       "121   122  2007          8.3\n",
       "122   123  2019          8.2\n",
       "123   124  2004          8.2\n",
       "124   125  2016          8.3\n",
       "125   126  1965          8.2\n",
       "126   127  2005          8.2\n",
       "127   128  1921          8.3\n",
       "128   129  1959          8.2\n",
       "129   130  2020          8.2\n",
       "130   131  1950          8.2\n",
       "131   132  2013          8.2\n",
       "132   133  2018          8.2\n",
       "133   134  1961          8.3\n",
       "134   135  1985          8.2\n",
       "135   136  1995          8.2\n",
       "136   137  1998          8.2\n",
       "137   138  2006          8.2\n",
       "138   139  2007          8.2\n",
       "139   140  1992          8.2\n",
       "140   141  1999          8.2\n",
       "141   142  2010          8.2\n",
       "142   143  2001          8.2\n",
       "143   144  1993          8.2\n",
       "144   145  1961          8.2\n",
       "145   146  1948          8.2\n",
       "146   147  1975          8.2\n",
       "147   148  1963          8.2\n",
       "148   149  2007          8.2\n",
       "149   150  2003          8.2\n",
       "150   151  1950          8.2\n",
       "151   152  2021          8.2\n",
       "152   153  1982          8.2\n",
       "153   154  2003          8.2\n",
       "154   155  1980          8.2\n",
       "155   156  1974          8.2\n",
       "156   157  1980          8.2\n",
       "157   158  2005          8.2\n",
       "158   159  1939          8.2\n",
       "159   160  1998          8.2\n",
       "160   161  2015          8.2\n",
       "161   162  1954          8.2\n",
       "162   163  2009          8.2\n",
       "163   164  2004          8.2\n",
       "164   165  2017          8.1\n",
       "165   166  1957          8.2\n",
       "166   167  1996          8.1\n",
       "167   168  2013          8.1\n",
       "168   169  2011          8.2\n",
       "169   170  1996          8.1\n",
       "170   171  2008          8.1\n",
       "171   172  1988          8.1\n",
       "172   173  2002          8.1\n",
       "173   174  2004          8.1\n",
       "174   175  1997          8.2\n",
       "175   176  1982          8.1\n",
       "176   177  1925          8.1\n",
       "177   178  2019          8.2\n",
       "178   179  1995          8.1\n",
       "179   180  2011          8.1\n",
       "180   181  2013          8.1\n",
       "181   182  1954          8.1\n",
       "182   183  1959          8.1\n",
       "183   184  2014          8.1\n",
       "184   185  2014          8.1\n",
       "185   186  1957          8.1\n",
       "186   187  1926          8.1\n",
       "187   188  1993          8.1\n",
       "188   189  1949          8.1\n",
       "189   190  1975          8.1\n",
       "190   191  1978          8.1\n",
       "191   192  2016          8.1\n",
       "192   193  1953          8.2\n",
       "193   194  2003          8.1\n",
       "194   195  1924          8.2\n",
       "195   196  2014          8.1\n",
       "196   197  1939          8.1\n",
       "197   198  2015          8.1\n",
       "198   199  2009          8.1\n",
       "199   200  1957          8.1\n",
       "200   201  2010          8.1\n",
       "201   202  2001          8.1\n",
       "202   203  2015          8.1\n",
       "203   204  1975          8.1\n",
       "204   205  1989          8.1\n",
       "205   206  1998          8.1\n",
       "206   207  1953          8.2\n",
       "207   208  1928          8.2\n",
       "208   209  2019          8.1\n",
       "209   210  2004          8.1\n",
       "210   211  1976          8.1\n",
       "211   212  1986          8.1\n",
       "212   213  2007          8.1\n",
       "213   214  2015          8.1\n",
       "214   215  1984          8.1\n",
       "215   216  2017          8.1\n",
       "216   217  1986          8.1\n",
       "217   218  2013          8.1\n",
       "218   219  1976          8.1\n",
       "219   220  2004          8.1\n",
       "220   221  2007          8.1\n",
       "221   222  1939          8.1\n",
       "222   223  1946          8.1\n",
       "223   224  1955          8.3\n",
       "224   225  1993          8.1\n",
       "225   226  1973          8.1\n",
       "226   227  1942          8.2\n",
       "227   228  2004          8.0\n",
       "228   229  1995          8.1\n",
       "229   230  2003          8.1\n",
       "230   231  1966          8.1\n",
       "231   232  2009          8.1\n",
       "232   233  1940          8.1\n",
       "233   234  2021          8.8\n",
       "234   235  2005          8.2\n",
       "235   236  2000          8.1\n",
       "236   237  1940          8.1\n",
       "237   238  1967          8.1\n",
       "238   239  2016          8.1\n",
       "239   240  1959          8.1\n",
       "240   241  1965          8.1\n",
       "241   242  1934          8.1\n",
       "242   243  1966          8.1\n",
       "243   244  1979          8.0\n",
       "244   245  1999          8.1\n",
       "245   246  1975          8.2\n",
       "246   247  2011          8.1\n",
       "247   248  1992          8.0\n",
       "248   249  1982          8.0\n",
       "249   250  1990          8.0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df = df.select_dtypes(include=['float64' , 'int64'])\n",
    "new_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f8825a04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>year</th>\n",
       "      <th>imbd_rating</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1994</td>\n",
       "      <td>9.3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1972</td>\n",
       "      <td>9.2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2008</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1974</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1957</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>1993</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2003</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>1966</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>1990</td>\n",
       "      <td>8.7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>1946</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>1991</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28</td>\n",
       "      <td>1977</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1991</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30</td>\n",
       "      <td>1985</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>31</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>32</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>33</td>\n",
       "      <td>1960</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>34</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>35</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>36</td>\n",
       "      <td>1994</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>37</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>38</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>39</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>40</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>41</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>42</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>43</td>\n",
       "      <td>1942</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>44</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>45</td>\n",
       "      <td>1962</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>46</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>47</td>\n",
       "      <td>1936</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>48</td>\n",
       "      <td>1968</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>49</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>50</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>51</td>\n",
       "      <td>1979</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>52</td>\n",
       "      <td>1931</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>53</td>\n",
       "      <td>1979</td>\n",
       "      <td>8.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>54</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>55</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>56</td>\n",
       "      <td>1981</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>57</td>\n",
       "      <td>2008</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>58</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>59</td>\n",
       "      <td>1950</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>60</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>61</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>62</td>\n",
       "      <td>1940</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>63</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>64</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>65</td>\n",
       "      <td>1986</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>66</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>67</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>68</td>\n",
       "      <td>1964</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>69</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>70</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>71</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>72</td>\n",
       "      <td>1984</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>73</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>74</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>75</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>76</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>77</td>\n",
       "      <td>1981</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>78</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>79</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>80</td>\n",
       "      <td>1984</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>81</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>82</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>83</td>\n",
       "      <td>1952</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>84</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>85</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>86</td>\n",
       "      <td>1963</td>\n",
       "      <td>8.4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>87</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>88</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>89</td>\n",
       "      <td>1983</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>90</td>\n",
       "      <td>1968</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>91</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>92</td>\n",
       "      <td>1992</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>93</td>\n",
       "      <td>1985</td>\n",
       "      <td>8.4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>94</td>\n",
       "      <td>2012</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>95</td>\n",
       "      <td>1941</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>96</td>\n",
       "      <td>1931</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>97</td>\n",
       "      <td>1962</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>98</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>99</td>\n",
       "      <td>1952</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>100</td>\n",
       "      <td>1958</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>101</td>\n",
       "      <td>1960</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>102</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>103</td>\n",
       "      <td>1971</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>104</td>\n",
       "      <td>1944</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>105</td>\n",
       "      <td>1987</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>106</td>\n",
       "      <td>1983</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>107</td>\n",
       "      <td>2020</td>\n",
       "      <td>8.4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>108</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>109</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>110</td>\n",
       "      <td>1962</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>111</td>\n",
       "      <td>1973</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>112</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>113</td>\n",
       "      <td>2022</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>114</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>115</td>\n",
       "      <td>1927</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>116</td>\n",
       "      <td>1976</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>117</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>118</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>119</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>120</td>\n",
       "      <td>1989</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>121</td>\n",
       "      <td>1948</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>122</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>123</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>124</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>125</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>126</td>\n",
       "      <td>1965</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>127</td>\n",
       "      <td>2005</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>128</td>\n",
       "      <td>1921</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>129</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>130</td>\n",
       "      <td>2020</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>131</td>\n",
       "      <td>1950</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>132</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>133</td>\n",
       "      <td>2018</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>134</td>\n",
       "      <td>1961</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>135</td>\n",
       "      <td>1985</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>136</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>137</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>138</td>\n",
       "      <td>2006</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>139</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>140</td>\n",
       "      <td>1992</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>141</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>142</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>143</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>144</td>\n",
       "      <td>1993</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>145</td>\n",
       "      <td>1961</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>146</td>\n",
       "      <td>1948</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>147</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>148</td>\n",
       "      <td>1963</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>149</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>150</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>151</td>\n",
       "      <td>1950</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>152</td>\n",
       "      <td>2021</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>153</td>\n",
       "      <td>1982</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>154</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>155</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>156</td>\n",
       "      <td>1974</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>157</td>\n",
       "      <td>1980</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>158</td>\n",
       "      <td>2005</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>159</td>\n",
       "      <td>1939</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>160</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>161</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>162</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>163</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>164</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>165</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>166</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>167</td>\n",
       "      <td>1996</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>168</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>169</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>170</td>\n",
       "      <td>1996</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>171</td>\n",
       "      <td>2008</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>172</td>\n",
       "      <td>1988</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>173</td>\n",
       "      <td>2002</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>174</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>175</td>\n",
       "      <td>1997</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>176</td>\n",
       "      <td>1982</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>177</td>\n",
       "      <td>1925</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>178</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>179</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>180</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>181</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>182</td>\n",
       "      <td>1954</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>183</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>184</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>185</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>186</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>187</td>\n",
       "      <td>1926</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>188</td>\n",
       "      <td>1993</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>189</td>\n",
       "      <td>1949</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>190</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>191</td>\n",
       "      <td>1978</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>192</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>193</td>\n",
       "      <td>1953</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>194</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>195</td>\n",
       "      <td>1924</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>196</td>\n",
       "      <td>2014</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>197</td>\n",
       "      <td>1939</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>198</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>199</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>200</td>\n",
       "      <td>1957</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>201</td>\n",
       "      <td>2010</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>202</td>\n",
       "      <td>2001</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>203</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>204</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>205</td>\n",
       "      <td>1989</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>206</td>\n",
       "      <td>1998</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>207</td>\n",
       "      <td>1953</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>208</td>\n",
       "      <td>1928</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>209</td>\n",
       "      <td>2019</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209</th>\n",
       "      <td>210</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210</th>\n",
       "      <td>211</td>\n",
       "      <td>1976</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211</th>\n",
       "      <td>212</td>\n",
       "      <td>1986</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>213</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>214</td>\n",
       "      <td>2015</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>215</td>\n",
       "      <td>1984</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>216</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>217</td>\n",
       "      <td>1986</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>218</td>\n",
       "      <td>2013</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>219</td>\n",
       "      <td>1976</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>220</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>221</td>\n",
       "      <td>2007</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>222</td>\n",
       "      <td>1939</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>223</td>\n",
       "      <td>1946</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>224</td>\n",
       "      <td>1955</td>\n",
       "      <td>8.3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>225</td>\n",
       "      <td>1993</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>226</td>\n",
       "      <td>1973</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>227</td>\n",
       "      <td>1942</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>228</td>\n",
       "      <td>2004</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>229</td>\n",
       "      <td>1995</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>230</td>\n",
       "      <td>2003</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>231</td>\n",
       "      <td>1966</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>232</td>\n",
       "      <td>2009</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>233</td>\n",
       "      <td>1940</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>234</td>\n",
       "      <td>2021</td>\n",
       "      <td>8.8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>235</td>\n",
       "      <td>2005</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>236</td>\n",
       "      <td>2000</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>237</td>\n",
       "      <td>1940</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>238</td>\n",
       "      <td>1967</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>239</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>240</td>\n",
       "      <td>1959</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>241</td>\n",
       "      <td>1965</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>242</td>\n",
       "      <td>1934</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>243</td>\n",
       "      <td>1966</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>244</td>\n",
       "      <td>1979</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>245</td>\n",
       "      <td>1999</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>246</td>\n",
       "      <td>1975</td>\n",
       "      <td>8.2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>247</td>\n",
       "      <td>2011</td>\n",
       "      <td>8.1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>248</td>\n",
       "      <td>1992</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>249</td>\n",
       "      <td>1982</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>250</td>\n",
       "      <td>1990</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     rank  year  imbd_rating  Cluster\n",
       "0       1  1994          9.3        2\n",
       "1       2  1972          9.2        2\n",
       "2       3  2008          9.0        2\n",
       "3       4  1974          9.0        2\n",
       "4       5  1957          9.0        2\n",
       "5       6  1993          9.0        2\n",
       "6       7  2003          9.0        2\n",
       "7       8  1994          8.9        2\n",
       "8       9  2001          8.8        2\n",
       "9      10  1966          8.8        2\n",
       "10     11  1994          8.8        2\n",
       "11     12  1999          8.8        2\n",
       "12     13  2002          8.8        2\n",
       "13     14  2010          8.8        2\n",
       "14     15  1980          8.7        2\n",
       "15     16  1999          8.7        2\n",
       "16     17  1990          8.7        2\n",
       "17     18  1975          8.7        2\n",
       "18     19  1995          8.6        2\n",
       "19     20  1954          8.6        2\n",
       "20     21  1946          8.6        2\n",
       "21     22  1991          8.6        2\n",
       "22     23  1998          8.6        2\n",
       "23     24  2002          8.6        2\n",
       "24     25  2014          8.6        2\n",
       "25     26  1997          8.6        2\n",
       "26     27  1999          8.6        2\n",
       "27     28  1977          8.6        2\n",
       "28     29  1991          8.6        2\n",
       "29     30  1985          8.5        2\n",
       "30     31  2001          8.6        2\n",
       "31     32  2002          8.5        2\n",
       "32     33  1960          8.5        2\n",
       "33     34  2019          8.5        2\n",
       "34     35  1994          8.5        2\n",
       "35     36  1994          8.5        2\n",
       "36     37  2000          8.5        2\n",
       "37     38  1998          8.5        2\n",
       "38     39  2006          8.5        2\n",
       "39     40  1995          8.5        2\n",
       "40     41  2006          8.5        2\n",
       "41     42  2014          8.5        2\n",
       "42     43  1942          8.5        2\n",
       "43     44  1988          8.5        2\n",
       "44     45  1962          8.6        2\n",
       "45     46  2011          8.5        2\n",
       "46     47  1936          8.5        2\n",
       "47     48  1968          8.5        2\n",
       "48     49  1988          8.5        2\n",
       "49     50  1954          8.5        2\n",
       "50     51  1979          8.5        2\n",
       "51     52  1931          8.5        2\n",
       "52     53  1979          8.5        2\n",
       "53     54  2000          8.4        2\n",
       "54     55  2012          8.4        2\n",
       "55     56  1981          8.4        2\n",
       "56     57  2008          8.4        2\n",
       "57     58  2006          8.4        2\n",
       "58     59  1950          8.4        2\n",
       "59     60  1957          8.4        2\n",
       "60     61  1980          8.4        2\n",
       "61     62  1940          8.4        2\n",
       "62     63  2018          8.4        2\n",
       "63     64  1957          8.4        2\n",
       "64     65  1986          8.4        2\n",
       "65     66  2018          8.4        2\n",
       "66     67  1999          8.4        2\n",
       "67     68  1964          8.4        2\n",
       "68     69  2012          8.4        2\n",
       "69     70  2003          8.4        2\n",
       "70     71  2009          8.3        2\n",
       "71     72  1984          8.4        2\n",
       "72     73  2017          8.4        2\n",
       "73     74  1995          8.3        2\n",
       "74     75  2019          8.4        2\n",
       "75     76  1995          8.4        2\n",
       "76     77  1981          8.4        2\n",
       "77     78  2019          8.4        2\n",
       "78     79  1997          8.3        2\n",
       "79     80  1984          8.3        2\n",
       "80     81  1997          8.3        2\n",
       "81     82  2016          8.4        2\n",
       "82     83  1952          8.3        0\n",
       "83     84  2009          8.4        2\n",
       "84     85  2000          8.3        0\n",
       "85     86  1963          8.4        0\n",
       "86     87  2010          8.3        0\n",
       "87     88  2018          8.4        0\n",
       "88     89  1983          8.3        0\n",
       "89     90  1968          8.3        0\n",
       "90     91  2004          8.3        0\n",
       "91     92  1992          8.3        0\n",
       "92     93  1985          8.4        0\n",
       "93     94  2012          8.3        0\n",
       "94     95  1941          8.3        0\n",
       "95     96  1931          8.3        0\n",
       "96     97  1962          8.3        0\n",
       "97     98  1959          8.3        0\n",
       "98     99  1952          8.3        0\n",
       "99    100  1958          8.3        0\n",
       "100   101  1960          8.3        0\n",
       "101   102  2001          8.3        0\n",
       "102   103  1971          8.3        0\n",
       "103   104  1944          8.3        0\n",
       "104   105  1987          8.3        0\n",
       "105   106  1983          8.3        0\n",
       "106   107  2020          8.4        0\n",
       "107   108  2010          8.3        0\n",
       "108   109  1995          8.3        0\n",
       "109   110  1962          8.3        0\n",
       "110   111  1973          8.3        0\n",
       "111   112  2009          8.3        0\n",
       "112   113  2022          8.3        0\n",
       "113   114  2011          8.3        0\n",
       "114   115  1927          8.3        0\n",
       "115   116  1976          8.2        0\n",
       "116   117  1997          8.2        0\n",
       "117   118  1988          8.2        0\n",
       "118   119  2000          8.2        0\n",
       "119   120  1989          8.2        0\n",
       "120   121  1948          8.3        0\n",
       "121   122  2007          8.3        0\n",
       "122   123  2019          8.2        0\n",
       "123   124  2004          8.2        0\n",
       "124   125  2016          8.3        0\n",
       "125   126  1965          8.2        0\n",
       "126   127  2005          8.2        0\n",
       "127   128  1921          8.3        0\n",
       "128   129  1959          8.2        0\n",
       "129   130  2020          8.2        0\n",
       "130   131  1950          8.2        0\n",
       "131   132  2013          8.2        0\n",
       "132   133  2018          8.2        0\n",
       "133   134  1961          8.3        0\n",
       "134   135  1985          8.2        0\n",
       "135   136  1995          8.2        0\n",
       "136   137  1998          8.2        0\n",
       "137   138  2006          8.2        0\n",
       "138   139  2007          8.2        0\n",
       "139   140  1992          8.2        0\n",
       "140   141  1999          8.2        0\n",
       "141   142  2010          8.2        0\n",
       "142   143  2001          8.2        0\n",
       "143   144  1993          8.2        0\n",
       "144   145  1961          8.2        0\n",
       "145   146  1948          8.2        0\n",
       "146   147  1975          8.2        0\n",
       "147   148  1963          8.2        0\n",
       "148   149  2007          8.2        0\n",
       "149   150  2003          8.2        0\n",
       "150   151  1950          8.2        0\n",
       "151   152  2021          8.2        0\n",
       "152   153  1982          8.2        0\n",
       "153   154  2003          8.2        0\n",
       "154   155  1980          8.2        0\n",
       "155   156  1974          8.2        0\n",
       "156   157  1980          8.2        0\n",
       "157   158  2005          8.2        0\n",
       "158   159  1939          8.2        0\n",
       "159   160  1998          8.2        0\n",
       "160   161  2015          8.2        0\n",
       "161   162  1954          8.2        0\n",
       "162   163  2009          8.2        0\n",
       "163   164  2004          8.2        0\n",
       "164   165  2017          8.1        0\n",
       "165   166  1957          8.2        0\n",
       "166   167  1996          8.1        1\n",
       "167   168  2013          8.1        1\n",
       "168   169  2011          8.2        1\n",
       "169   170  1996          8.1        1\n",
       "170   171  2008          8.1        1\n",
       "171   172  1988          8.1        1\n",
       "172   173  2002          8.1        1\n",
       "173   174  2004          8.1        1\n",
       "174   175  1997          8.2        1\n",
       "175   176  1982          8.1        1\n",
       "176   177  1925          8.1        1\n",
       "177   178  2019          8.2        1\n",
       "178   179  1995          8.1        1\n",
       "179   180  2011          8.1        1\n",
       "180   181  2013          8.1        1\n",
       "181   182  1954          8.1        1\n",
       "182   183  1959          8.1        1\n",
       "183   184  2014          8.1        1\n",
       "184   185  2014          8.1        1\n",
       "185   186  1957          8.1        1\n",
       "186   187  1926          8.1        1\n",
       "187   188  1993          8.1        1\n",
       "188   189  1949          8.1        1\n",
       "189   190  1975          8.1        1\n",
       "190   191  1978          8.1        1\n",
       "191   192  2016          8.1        1\n",
       "192   193  1953          8.2        1\n",
       "193   194  2003          8.1        1\n",
       "194   195  1924          8.2        1\n",
       "195   196  2014          8.1        1\n",
       "196   197  1939          8.1        1\n",
       "197   198  2015          8.1        1\n",
       "198   199  2009          8.1        1\n",
       "199   200  1957          8.1        1\n",
       "200   201  2010          8.1        1\n",
       "201   202  2001          8.1        1\n",
       "202   203  2015          8.1        1\n",
       "203   204  1975          8.1        1\n",
       "204   205  1989          8.1        1\n",
       "205   206  1998          8.1        1\n",
       "206   207  1953          8.2        1\n",
       "207   208  1928          8.2        1\n",
       "208   209  2019          8.1        1\n",
       "209   210  2004          8.1        1\n",
       "210   211  1976          8.1        1\n",
       "211   212  1986          8.1        1\n",
       "212   213  2007          8.1        1\n",
       "213   214  2015          8.1        1\n",
       "214   215  1984          8.1        1\n",
       "215   216  2017          8.1        1\n",
       "216   217  1986          8.1        1\n",
       "217   218  2013          8.1        1\n",
       "218   219  1976          8.1        1\n",
       "219   220  2004          8.1        1\n",
       "220   221  2007          8.1        1\n",
       "221   222  1939          8.1        1\n",
       "222   223  1946          8.1        1\n",
       "223   224  1955          8.3        1\n",
       "224   225  1993          8.1        1\n",
       "225   226  1973          8.1        1\n",
       "226   227  1942          8.2        1\n",
       "227   228  2004          8.0        1\n",
       "228   229  1995          8.1        1\n",
       "229   230  2003          8.1        1\n",
       "230   231  1966          8.1        1\n",
       "231   232  2009          8.1        1\n",
       "232   233  1940          8.1        1\n",
       "233   234  2021          8.8        1\n",
       "234   235  2005          8.2        1\n",
       "235   236  2000          8.1        1\n",
       "236   237  1940          8.1        1\n",
       "237   238  1967          8.1        1\n",
       "238   239  2016          8.1        1\n",
       "239   240  1959          8.1        1\n",
       "240   241  1965          8.1        1\n",
       "241   242  1934          8.1        1\n",
       "242   243  1966          8.1        1\n",
       "243   244  1979          8.0        1\n",
       "244   245  1999          8.1        1\n",
       "245   246  1975          8.2        1\n",
       "246   247  2011          8.1        1\n",
       "247   248  1992          8.0        1\n",
       "248   249  1982          8.0        1\n",
       "249   250  1990          8.0        1"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#apply the kMeans clustering function to the data\n",
    "from sklearn.cluster import KMeans \n",
    "kmeans = KMeans(n_clusters=3)\n",
    "kmeans.fit(new_df)\n",
    "label = kmeans.labels_\n",
    "new_df[\"Cluster\"] = label\n",
    "\n",
    "new_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7351b3de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    85\n",
      "1    83\n",
      "2    82\n",
      "Name: Cluster, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "kmeans = KMeans(n_clusters=3)\n",
    "kmeans.fit(new_df)\n",
    "\n",
    "labels = kmeans.predict(new_df)\n",
    "df[\"Cluster\"] = labels\n",
    "\n",
    "print(df[\"Cluster\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a0cac9e2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          rank         year  imbd_rating\n",
      "Cluster                                 \n",
      "0        208.0  1984.647059     8.117647\n",
      "1        124.0  1985.590361     8.250602\n",
      "2         41.5  1988.914634     8.559756\n"
     ]
    }
   ],
   "source": [
    "mean = df.groupby(\"Cluster\").mean()\n",
    "print(mean)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44212bdf",
   "metadata": {},
   "source": [
    "- Cluster 0 is first stage movies that has the lowest rank and highest imbd rating \n",
    "- Cluster 1 is the second stage movies with highest rank with lowest imbd rating \n",
    "- Cluster 2 is the third stage movies that have moderate ranking but more imbd rating than cluster 1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "cbddcda6",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df['rank'], df['imbd_rating'], c=kmeans.labels_)\n",
    "plt.xlabel('rank')\n",
    "plt.ylabel('imbd_rating')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07604971",
   "metadata": {},
   "source": [
    "### Repeat the experiment with a larger number of clusters. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "550d26b6",
   "metadata": {},
   "source": [
    "We can see that the different clusters are  not fairly well-separated in this plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "5522b9df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4     28\n",
      "7     24\n",
      "1     23\n",
      "13    20\n",
      "8     19\n",
      "10    17\n",
      "0     16\n",
      "12    15\n",
      "9     14\n",
      "3     13\n",
      "14    13\n",
      "6     13\n",
      "5     13\n",
      "11    12\n",
      "2     10\n",
      "Name: Cluster, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "kmeans = KMeans(n_clusters=15)\n",
    "kmeans.fit(new_df)\n",
    "\n",
    "labels = kmeans.predict(new_df)\n",
    "df[\"Cluster\"] = labels\n",
    "\n",
    "print(df[\"Cluster\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "70db9561",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               rank         year  imbd_rating\n",
      "Cluster                                      \n",
      "0        144.562500  1996.312500     8.200000\n",
      "1         45.826087  1997.695652     8.473913\n",
      "2        209.000000  1979.800000     8.100000\n",
      "3         93.846154  1979.230769     8.323077\n",
      "4         15.142857  1991.428571     8.782143\n",
      "5        234.384615  1953.384615     8.130769\n",
      "6        146.153846  1958.153846     8.207692\n",
      "7        171.375000  2005.208333     8.137500\n",
      "8        118.684211  2007.578947     8.252632\n",
      "9         48.000000  1951.500000     8.485714\n",
      "10       236.000000  2000.588235     8.117647\n",
      "11       192.000000  1943.666667     8.133333\n",
      "12       204.733333  2010.400000     8.100000\n",
      "13        77.650000  2008.350000     8.360000\n",
      "14       103.615385  1947.461538     8.300000\n"
     ]
    }
   ],
   "source": [
    "mean = df.groupby(\"Cluster\").mean()\n",
    "print(mean)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "3273d7ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(new_df['rank'], df['imbd_rating'], c=kmeans.labels_)\n",
    "plt.xlabel('rank')\n",
    "plt.ylabel('imbd_rating')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7ef0c3b",
   "metadata": {},
   "source": [
    "## Do more clusters make it easier to distinguish the clusters?\n",
    "No, it doesnt make it easier to distingish the clusters. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83934205",
   "metadata": {},
   "source": [
    "# Q5 Hierarchical Clustering\n",
    "Since we don't know how many clusters there should be in the data, a better approach is to use Hierarchical clustering and examine the dendograph to understand what natural clusters are present in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c3bcdee2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.cluster.hierarchy import linkage, dendrogram\n",
    "\n",
    "# perform hierarchical clustering\n",
    "Z = linkage(new_df, method='ward')\n",
    "\n",
    "# plot the dendrogram\n",
    "dendrogram(Z, labels=new_df.index, leaf_rotation=90, leaf_font_size=10)\n",
    "plt.xlabel('movie_id')\n",
    "plt.ylabel('imbd_rating')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "d0b54e2b",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               rank         year  imbd_rating\n",
      "Cluster                                      \n",
      "1         23.722222  1998.083333     8.666667\n",
      "2         38.500000  1955.000000     8.600000\n",
      "3        107.863636  1954.681818     8.286364\n",
      "4         71.864865  1999.540541     8.381081\n",
      "5        216.142857  2007.607143     8.125000\n",
      "6        231.480000  1967.680000     8.100000\n",
      "7        174.230769  1955.384615     8.161538\n",
      "8        169.111111  2005.111111     8.144444\n",
      "9        124.548387  2003.225806     8.238710\n"
     ]
    }
   ],
   "source": [
    "#to chracterize cluseters\n",
    "import numpy as np\n",
    "\n",
    "# determine cluster labels for each Pokemon based on the dendrogram\n",
    "from scipy.cluster.hierarchy import fcluster\n",
    "max_dist = 200\n",
    "cluster_labels = fcluster(Z, max_dist, criterion='distance')\n",
    "\n",
    "# add cluster labels to the original data frame\n",
    "new_df['Cluster'] = cluster_labels\n",
    "\n",
    "# calculate mean values for each cluster\n",
    "cluster_means = new_df.groupby('Cluster').mean()\n",
    "print(cluster_means)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b1f4d06",
   "metadata": {},
   "source": [
    "# Q5 a. K-Nearest Neighbours Classifier\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ca6567e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df['imbd_rating'] = pd.cut(new_df['imbd_rating'], bins=3, labels=['low', 'medium', 'high'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "4659e0ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train shape: (187, 1)\n",
      "y_train shape: (187, 1)\n",
      "X_test shape: (63, 1)\n",
      "y_test shape: (63, 1)\n"
     ]
    }
   ],
   "source": [
    "X = new_df[['rank']]\n",
    "y = new_df[['imbd_rating']]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=142)\n",
    "\n",
    "print(\"X_train shape: {}\".format(X_train.shape))\n",
    "print(\"y_train shape: {}\".format(y_train.shape))\n",
    "print(\"X_test shape: {}\".format(X_test.shape))\n",
    "print(\"y_test shape: {}\".format(y_test.shape))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "5990708b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=1)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the KNN classifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "# Build a KNN classifier model\n",
    "clf_knn = KNeighborsClassifier(n_neighbors=1)\n",
    "\n",
    "# Train the model with the training data\n",
    "clf_knn.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4914eca5",
   "metadata": {},
   "source": [
    "## 5b. Write code to calculate the accuracy score\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "63f5aa4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 0.9841269841269841\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "y_pred = clf_knn.predict(X_test)\n",
    "accuracy = accuracy_score(y_pred, y_test)\n",
    "print(\"Accuracy is:\" , accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "880607be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score, KFold\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "cv_scores = []\n",
    "cv_scores_std = []\n",
    "k_range = range(1, 50, 5)\n",
    "for i in k_range:\n",
    "    clf = KNeighborsClassifier(n_neighbors = i)\n",
    "    scores = cross_val_score(clf,X, y, scoring='accuracy', cv=KFold(n_splits=10, shuffle=True))\n",
    "    cv_scores.append(scores.mean())\n",
    "    cv_scores_std.append(scores.std())\n",
    "\n",
    "# Plot the relationship\n",
    "plt.errorbar(k_range, cv_scores, yerr=cv_scores_std, marker='x', label='Accuracy')\n",
    "plt.ylim([0.1, 1.1])\n",
    "plt.xlabel('$K$')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.legend(loc='best')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e5d2b47",
   "metadata": {},
   "source": [
    "## 5c. Check against the figure plotted above to see if the selected hyperparameter $K$ can lead to the highest misclassification accuracy. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "13af82c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=True),\n",
       "             estimator=KNeighborsClassifier(),\n",
       "             param_grid={'n_neighbors': range(1, 50, 5)}, scoring='accuracy')"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "parameter_grid = {'n_neighbors' : range(1,50,5)}\n",
    "knn_clf = KNeighborsClassifier()\n",
    "gs_knn = GridSearchCV(knn_clf, parameter_grid, scoring='accuracy' , cv=KFold(n_splits=10, shuffle=True))\n",
    "gs_knn.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a6f1e999",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "best value for n_neighbors 11\n"
     ]
    }
   ],
   "source": [
    "print(\"best value for n_neighbors\" , gs_knn.best_params_['n_neighbors'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b86dd6c",
   "metadata": {},
   "source": [
    "# 6.  Gaussian Naive Bayes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0755ca60",
   "metadata": {},
   "source": [
    "Create and training a Gaussian Naive Bayes classifier model. Then use the model to predict testing data. Explore the learned probability (model parameters). Lastly use 10-fold cross validation to show a more robust prediction accuracy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "27b85f30",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.datasets import make_classification\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "2e2103ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X, y = make_classification(n_samples=100, n_features=2, n_informative=2,\n",
    "                           n_redundant=0, n_classes=3, n_clusters_per_class=1, \n",
    "                           weights=None, flip_y=0.01, class_sep=0.5, hypercube=True,\n",
    "                           shift=0.0, scale=1.0, shuffle=True, random_state=42)\n",
    "\n",
    "# Data split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, random_state=42)\n",
    "\n",
    "# Visualize the generated data\n",
    "colors = ['blue', 'yellow', 'green']\n",
    "for i, color in enumerate(colors):\n",
    "    plt.scatter(X_train[y_train == i, 0], X_train[y_train == i, 1], c=color)\n",
    "plt.scatter(X_test[:, 0], X_test[:,1], c='red', marker='x', label='Testing Data')\n",
    "plt.legend(loc='best')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "cced64cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Testing accuracy is: 0.7500\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Create and training a Gaussian Naive Bayes classifier model\n",
    "clf = GaussianNB()\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "# Use the model to predict testing data\n",
    "y_pred = clf.predict(X_test)\n",
    "accuracy = accuracy_score(y_pred, y_test)\n",
    "print('Testing accuracy is: %.4f\\n' % accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "5d35c7f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estimated probability of classess: \n",
      " [0.325  0.3125 0.3625]\n",
      "Estimated mean for each Gaussian distribution: \n",
      " [[ 0.5508401  -0.48063246]\n",
      " [ 0.44640141  0.43838299]\n",
      " [-0.41484025 -0.33233618]]\n",
      "Estimated variance for each Gaussian distribution: \n",
      " [[0.24940784 0.16208628]\n",
      " [0.85696063 0.73986627]\n",
      " [0.07607725 0.30208004]]\n"
     ]
    }
   ],
   "source": [
    "# Explore the learned probability (model parameters)\n",
    "print('Estimated probability of classess: \\n', clf.class_prior_)\n",
    "print('Estimated mean for each Gaussian distribution: \\n', clf.theta_)\n",
    "print('Estimated variance for each Gaussian distribution: \\n', clf.sigma_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "2de5c356",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gaussian Naive Bayes accuracy range: [0.6000, 0.9000]; mean: 0.7700; std: 0.0900\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Use 10-fold cross validation to show a more robust prediction accuracy\n",
    "clf = GaussianNB()\n",
    "scores = cross_val_score(clf, X, y, scoring='accuracy', cv=10)\n",
    "print('Gaussian Naive Bayes accuracy range: [%.4f, %.4f]; mean: %.4f; std: %.4f\\n' % (scores.min(), scores.max(), scores.mean(), scores.std()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca699d5d",
   "metadata": {},
   "source": [
    "# 7. Multinomial Naive Bayes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11e71f5c",
   "metadata": {},
   "source": [
    "By using Multinomial Naive Bayes create and train the model and find the accuracy score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "e229c918",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import OrdinalEncoder\n",
    "enc = OrdinalEncoder()\n",
    "coded_data = enc.fit_transform(new_df)\n",
    "\n",
    "X = coded_data[:, 0:-1]\n",
    "y = coded_data[:, -1]\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "54a9e85a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MultinomialNB()"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Creat and train a model\n",
    "from sklearn.naive_bayes import MultinomialNB\n",
    "clf_mnb = MultinomialNB()\n",
    "clf_mnb.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d781bc45",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 0.6349\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model\n",
    "y_pred = clf_mnb.predict(X_test)\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print('Accuracy is: %.4f\\n' % accuracy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ce791d0",
   "metadata": {},
   "source": [
    "## Q8. Compare the prediction accuaracy between KNN clasifier and Gaussian Naive Bayes. Use 10-cross validation to report the accuracy mean and standard deviation. Which classification model is more accurate on movie data set? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "c6e2878c",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = new_df[['rank']]\n",
    "y = new_df[['imbd_rating']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "40d7e98f",
   "metadata": {},
   "outputs": [],
   "source": [
    "clf_knn = KNeighborsClassifier(n_neighbors=11)\n",
    "clf_gnb = GaussianNB()\n",
    "score_knn = cross_val_score(clf_knn, X,y ,scoring='accuracy', cv=10)\n",
    "score_gnb = cross_val_score(clf_gnb, X, y, scoring='accuracy', cv=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "f06e3775",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For KNN, the score of mean and std: 0.9360000000000002 0.1561537703675451\n"
     ]
    }
   ],
   "source": [
    "print(\"For KNN, the score of mean and std:\" , score_knn.mean(), score_knn.std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "f6d4f6dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For GaussianNB, the score of mean and std: 0.9039999999999999 0.2264155471693585\n"
     ]
    }
   ],
   "source": [
    "print(\"For GaussianNB, the score of mean and std:\" , score_gnb.mean(), score_gnb.std())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0f671e6",
   "metadata": {},
   "source": [
    "The performance of KNN is better than GaussianNB since the mean of KNN higher than GaussianNB i.e. 93% which means its more accurate.\n",
    "However, the std of KNN is higher than that of GaussianNB, therefore KNN classifer can be less consistent across different test datasets."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
